<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>Blog by Simeon</title>
        <link>https://simeon.staneks.de</link>
        <description>It&#x27;s better to start imperfectly than wait perfectly</description>
        <image>
            <url>https:&#x2F;&#x2F;simeon.staneks.de&#x2F;android-chrome-512x512.png</url>
            <title>Blog by Simeon</title>
            <link>https:&#x2F;&#x2F;simeon.staneks.de</link>
        </image>
        <generator>Zola</generator>
        <author>Simeon Stanek</author>
        <language>en</language>
        <link href="https://simeon.staneks.de/en/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Thu, 30 Oct 2025 12:00:00 +0100</lastBuildDate>
        <item>
            <title>Yet Another Dashboard: iPad Air Gen1 - Cheap and Fun</title>
            <pubDate>Thu, 30 Oct 2025 12:00:00 +0100</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/ipad-air-gen1-dashboard-cheap-and-funny/</link>
            <guid>https://simeon.staneks.de/en/posts/ipad-air-gen1-dashboard-cheap-and-funny/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/ipad-air-gen1-dashboard-cheap-and-funny/">&lt;h1 id=&quot;19eur-smart-home-dashboard-with-ipad-air-gen1-cheap-and-fun&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#19eur-smart-home-dashboard-with-ipad-air-gen1-cheap-and-fun&quot; aria-label=&quot;Anchor link for: 19eur-smart-home-dashboard-with-ipad-air-gen1-cheap-and-fun&quot;&gt;19€ Smart Home Dashboard with iPad Air Gen1 - Cheap and Fun&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Initially, the plan was to build the dashboard from the previous article using a Raspberry Pi and an old laptop display. But then I found a first-generation iPad Air for only 19€ on Kleinanzeigen (classifieds). I simply couldn&#x27;t resist. The iPad Air Gen1 has a 9.7-inch Retina display with a resolution of 2048 x 1536 pixels, which is absolutely sufficient for a dashboard. Additionally, it&#x27;s lightweight, compact, and has good battery life. More importantly, however, it&#x27;s cheaper than a Raspberry Pi with a display, and it&#x27;s simply more fun to work with an iPad.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-concept-cordova-app-as-dashboard&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-concept-cordova-app-as-dashboard&quot; aria-label=&quot;Anchor link for: the-concept-cordova-app-as-dashboard&quot;&gt;The Concept: Cordova App as Dashboard&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Instead of jailbreaking the iPad, I decided to create a Cordova app that displays my dashboard. Cordova allows you to turn web applications into native apps, and it&#x27;s easy to use HTML, CSS, and JavaScript to design the user interface. The app runs in full-screen mode and provides a seamless experience.&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, it can be purchased at &lt;a href=&quot;https:&#x2F;&#x2F;buymeacoffee.com&#x2F;simeonlukas&#x2F;e&#x2F;456968&quot;&gt;Buy me a coffee - Shop&lt;&#x2F;a&gt; if anyone is interested. Instructions for use are automatically included. Here&#x27;s a quick guide:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ios-kiosk-app-how-to-install-it-on-your-ipad&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#ios-kiosk-app-how-to-install-it-on-your-ipad&quot; aria-label=&quot;Anchor link for: ios-kiosk-app-how-to-install-it-on-your-ipad&quot;&gt;iOS Kiosk App: How to Install It on Your iPad&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;what-you-need&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-you-need&quot; aria-label=&quot;Anchor link for: what-you-need&quot;&gt;What You Need&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;iPad with iOS 12.5.7 or higher&lt;br &#x2F;&gt;
Computer (Windows or macOS)&lt;br &#x2F;&gt;
Sideloadly (free)&lt;br &#x2F;&gt;
Apple ID (free)&lt;br &#x2F;&gt;
iOS Kiosk App file (.ipa)&lt;&#x2F;p&gt;
&lt;h4 id=&quot;installation-in-3-steps&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#installation-in-3-steps&quot; aria-label=&quot;Anchor link for: installation-in-3-steps&quot;&gt;Installation in 3 Steps&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ol&gt;
&lt;li&gt;Set up Sideloadly
Download Sideloadly from sideloadly.io and install the software on your computer.&lt;&#x2F;li&gt;
&lt;li&gt;Connect iPad
Connect your iPad to the computer via USB cable and confirm the trust request on the iPad.&lt;&#x2F;li&gt;
&lt;li&gt;Install App
Open Sideloadly, drag the .ipa file into the program window, enter your Apple ID, select your iPad, and click &quot;Start Sideloading&quot;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;initial-setup&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#initial-setup&quot; aria-label=&quot;Anchor link for: initial-setup&quot;&gt;Initial Setup&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;When you first launch the app, a configuration window automatically appears. Enter the URL of your desired website or dashboard here and confirm with &quot;OK&quot;. The app automatically starts in full-screen mode without a visible status bar.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;adjusting-configuration&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#adjusting-configuration&quot; aria-label=&quot;Anchor link for: adjusting-configuration&quot;&gt;Adjusting Configuration&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;After the app starts, a &quot;Configuration&quot; button appears for 5 seconds. Tap it to change the displayed URL at any time.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;important-notes&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#important-notes&quot; aria-label=&quot;Anchor link for: important-notes&quot;&gt;Important Notes&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;Certificate Duration: With a free Apple ID, the app certificate lasts 7 days. After that, you need to reinstall the app. A paid Apple Developer Account (99€&#x2F;year) extends the duration to 1 year.
Optimal Use: Disable automatic iPad lock in settings and use a stable Wi-Fi connection. For additional security, activating iOS Guided Access under Settings &amp;gt; Accessibility is recommended.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;troubleshooting&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#troubleshooting&quot; aria-label=&quot;Anchor link for: troubleshooting&quot;&gt;Troubleshooting&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;If the website doesn&#x27;t load, check the URL for typos and your iPad&#x27;s internet connection. In case of problems, reinstalling the app via Sideloadly usually helps.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;ipad-air-gen1-dashboard-cheap-and-funny&#x2F;images&#x2F;image001.jpeg&quot; alt=&quot;Dashboard&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;Conclusion&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The iPad Air Gen1 as a smart home dashboard is a clever and cost-effective alternative to Raspberry Pi solutions. For just 19€, you get a high-quality 9.7-inch Retina display with excellent resolution that&#x27;s perfect for dashboard visualization.&lt;&#x2F;p&gt;
&lt;p&gt;The Cordova-based kiosk app offers an elegant solution without jailbreaking and is incredibly easy to install thanks to Sideloadly. The only downside is the 7-day certificate duration with a free Apple ID – but hey, for 19€, you can also connect the iPad briefly once a week. (Or, like me, you&#x27;re lucky enough to have a paid Apple Developer Account)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Advantages at a Glance:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Extremely affordable entry (19€ used)&lt;&#x2F;li&gt;
&lt;li&gt;Brilliant Retina display&lt;&#x2F;li&gt;
&lt;li&gt;Easy installation without technical knowledge&lt;&#x2F;li&gt;
&lt;li&gt;No jailbreak necessary&lt;&#x2F;li&gt;
&lt;li&gt;Compact, lightweight, and energy-efficient&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Disadvantages:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Weekly reinstallation with free Apple ID&lt;&#x2F;li&gt;
&lt;li&gt;Dependent on Sideloadly (no App Store solution)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For anyone looking for an affordable, stylish smart home display who doesn&#x27;t want to tinker with Raspberry Pi, this solution is perfect. And honestly: it&#x27;s simply more fun to work with an iPad than with a cobbled-together display setup that might fall apart just by looking at it.&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/ipad-air-gen1-dashboard-cheap-and-funny/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/ipad-air-gen1-dashboard-cheap-and-funny/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> Yes, I know, another dashboard. But this time with a first-generation iPad Air. Why? Because it&#x27;s affordable, fun, and perfect for my smart home setup. Basically, it&#x27;s the display for my dashboard from the previous article </info>
        </item>
        <item>
            <title>How a 2011 Kindle Became My Home&#x27;s Pip-Boy</title>
            <pubDate>Mon, 01 Sep 2025 12:00:00 +0100</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/another-magic-home-dashboard-with-kindle/</link>
            <guid>https://simeon.staneks.de/en/posts/another-magic-home-dashboard-with-kindle/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/another-magic-home-dashboard-with-kindle/">&lt;h1 id=&quot;how-a-kindle-from-the-past-became-my-smart-home-hub&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-a-kindle-from-the-past-became-my-smart-home-hub&quot; aria-label=&quot;Anchor link for: how-a-kindle-from-the-past-became-my-smart-home-hub&quot;&gt;How a Kindle from the Past Became My Smart Home Hub&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;This tutorial is for my dear friend &lt;a href=&quot;https:&#x2F;&#x2F;enthusiastic.dev&#x2F;&quot;&gt;J.&lt;&#x2F;a&gt; and everyone else who might have an old Kindle device lying around and wants to use it as a Smart Home dashboard - or simply because they enjoy such projects. In 2020, my brother-in-law gave me his old Kindle 4 Touch that he no longer needed. Originally, I wanted to use it as an e-book reader, but after a few weeks, I noticed I barely used it. So I started looking for other uses.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-concept-an-interface-that-survives-any-apocalypse&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-concept-an-interface-that-survives-any-apocalypse&quot; aria-label=&quot;Anchor link for: the-concept-an-interface-that-survives-any-apocalypse&quot;&gt;The Concept: An Interface That Survives Any Apocalypse&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The Kindle should be like a Pip-Boy. Well... um... at least a little bit. It should allow me to control my smart home and Squeezebox players without constantly having to use my smartphone or PC. The device is robust and uses little power. Plus, it has an E-Ink screen that&#x27;s easily readable even in direct sunlight - perfect for use in various lighting conditions. It also serves as a display for different images (depending on the weather) and garbage collection schedules should be visible too. So almost like a Pip-Boy, except for weapons and the rest. The only thing that might remind you of it is the fact that the device controls music and is simply old.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;technical-implementation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#technical-implementation&quot; aria-label=&quot;Anchor link for: technical-implementation&quot;&gt;Technical Implementation&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The project is based on several technologies and components:&lt;&#x2F;p&gt;
&lt;h4 id=&quot;software&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#software&quot; aria-label=&quot;Anchor link for: software&quot;&gt;Software&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;HTML&lt;&#x2F;strong&gt; for structure&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;CSS&lt;&#x2F;strong&gt; for design and proper display on the E-Ink screen&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;JavaScript&lt;&#x2F;strong&gt; for interactivity&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;PHP&lt;&#x2F;strong&gt; for server-side logic&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;hardware&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#hardware&quot; aria-label=&quot;Anchor link for: hardware&quot;&gt;Hardware&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Jailbroken Kindle 4 Touch&lt;&#x2F;strong&gt; as display and control device&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Micro-USB cable&lt;&#x2F;strong&gt; for power supply&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Picture frame&lt;&#x2F;strong&gt; as case&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;jailbreaking-with-current-developer-certificates&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#jailbreaking-with-current-developer-certificates&quot; aria-label=&quot;Anchor link for: jailbreaking-with-current-developer-certificates&quot;&gt;Jailbreaking with Current Developer Certificates&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This year, the old developer certificates for the Mobileread Kindlet Kit actually expired, and extensions, especially KUAL (Kindle Unified Application Launcher) on previously jailbroken Kindle devices no longer work. But don&#x27;t worry, there&#x27;s a solution! With the new certificates from &lt;a href=&quot;https:&#x2F;&#x2F;www.mobileread.com&#x2F;forums&#x2F;showpost.php?p=4506164&amp;amp;postcount=1295&quot;&gt;NiLuJe&lt;&#x2F;a&gt;, everything runs smoothly again.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s a brief guide on how to jailbreak your Kindle 4 Touch:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Preparation&lt;&#x2F;strong&gt;: Connect your Kindle to the computer and back up all important data.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Download current updates for your Kindle&lt;&#x2F;strong&gt;: Download the latest firmware from the &lt;a href=&quot;https:&#x2F;&#x2F;www.amazon.com&#x2F;-&#x2F;de&#x2F;gp&#x2F;help&#x2F;customer&#x2F;display.html?nodeId=GX3VVAQS4DYDE5KE#GUID-4C9EFFF2-2B4E-4DB8-997D-6DC9B3566220__SECTION_AA6BD2D5AAF04CE196510F7D3FA2B2F0&quot;&gt;Amazon website&lt;&#x2F;a&gt;. In this case (Kindle 4 Touch), your Kindle must be updated to version &lt;em&gt;5.3.7.3&lt;&#x2F;em&gt;. Copy the .bin file to the Kindle&#x27;s root directory and install it via &quot;Menu&quot; -&amp;gt; &quot;Settings&quot; -&amp;gt; &quot;Menu&quot; -&amp;gt; &quot;Update Kindle&quot;. The device will restart afterward.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Download jailbreak files&lt;&#x2F;strong&gt;: Download the current &lt;a href=&quot;https:&#x2F;&#x2F;storage.gra.cloud.ovh.net&#x2F;v1&#x2F;AUTH_2ac4bfee353948ec8ea7fd1710574097&#x2F;mr-public&#x2F;Touch&#x2F;kindle-jailbreak-1.16.N-r19426.tar.xz&quot;&gt;jailbreak files&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Prepare the jailbreak&lt;&#x2F;strong&gt;: Extract the downloaded files and copy the contents of &lt;em&gt;kindle-5.4-jailbreak.zip&lt;&#x2F;em&gt; to your Kindle&#x27;s root directory.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Replace certificates&lt;&#x2F;strong&gt;: Download the new certificates from &lt;a href=&quot;https:&#x2F;&#x2F;storage.gra.cloud.ovh.net&#x2F;v1&#x2F;AUTH_2ac4bfee353948ec8ea7fd1710574097&#x2F;mr-public&#x2F;KUAL&#x2F;developer.keystore&quot;&gt;NiLuJe&lt;&#x2F;a&gt; and replace the old &lt;em&gt;developer.keystore&lt;&#x2F;em&gt; file in your Kindle&#x27;s root directory.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Install the jailbreak&lt;&#x2F;strong&gt;: Activate the jailbreak via &quot;Menu&quot; -&amp;gt; &quot;Settings&quot; -&amp;gt; &quot;Menu&quot; -&amp;gt; &quot;Update Kindle&quot;. If everything worked, &lt;strong&gt;**Jailbreak**&lt;&#x2F;strong&gt; should appear at the bottom of the screen. The device must be restarted afterward.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;guide-for-previously-jailbroken-kindles-with-kual&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#guide-for-previously-jailbroken-kindles-with-kual&quot; aria-label=&quot;Anchor link for: guide-for-previously-jailbroken-kindles-with-kual&quot;&gt;Guide for Previously Jailbroken Kindles with KUAL&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;If your Kindle is already jailbroken, you can directly replace the certificates by downloading the following file from &lt;a href=&quot;https:&#x2F;&#x2F;www.mobileread.com&#x2F;forums&#x2F;attachment.php?attachmentid=215127&amp;amp;d=1745098511&quot;&gt;NiLuJe&lt;&#x2F;a&gt; and placing the appropriate .bin file for your Kindle in your Kindle&#x27;s root directory. In this case, it would be &lt;em&gt;Update_mkk-20250419-k4-ALL_keystore-install.bin&lt;&#x2F;em&gt;. Then you can install the file via &quot;Menu&quot; -&amp;gt; &quot;Settings&quot; -&amp;gt; &quot;Menu&quot; -&amp;gt; &quot;Update Kindle&quot;. KUAL should work again.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;installing-kual-and-weblaunch&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#installing-kual-and-weblaunch&quot; aria-label=&quot;Anchor link for: installing-kual-and-weblaunch&quot;&gt;Installing KUAL and WebLaunch&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Download and install KUAL&lt;&#x2F;strong&gt;: Download the latest version of &lt;a href=&quot;https:&#x2F;&#x2F;www.mobileread.com&#x2F;forums&#x2F;showthread.php?t=225030&quot;&gt;KUAL&lt;&#x2F;a&gt;. Extract the ZIP file and copy the &lt;em&gt;KUAL-KDK-2.0.azw2&lt;&#x2F;em&gt; file to your Kindle&#x27;s &lt;em&gt;documents&lt;&#x2F;em&gt; directory.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Download and install WebLaunch&lt;&#x2F;strong&gt;: Download the latest version of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PaulFreund&#x2F;WebLaunch&quot;&gt;WebLaunch&lt;&#x2F;a&gt;. Extract the ZIP file and copy the entire contents into a directory named &lt;em&gt;WebLaunch&lt;&#x2F;em&gt; in your Kindle&#x27;s &lt;em&gt;extensions&lt;&#x2F;em&gt; directory.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Configure WebLaunch&lt;&#x2F;strong&gt;: Create a &lt;em&gt;settings.js&lt;&#x2F;em&gt; file in the &lt;em&gt;WebLaunch&lt;&#x2F;em&gt; directory and customize it (see below). Start KUAL on your Kindle&#x27;s home screen, select WebLaunch, and the website should appear.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;structure-and-configuration-of-the-settings-js-file&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#structure-and-configuration-of-the-settings-js-file&quot; aria-label=&quot;Anchor link for: structure-and-configuration-of-the-settings-js-file&quot;&gt;Structure and Configuration of the &lt;em&gt;settings.js&lt;&#x2F;em&gt; File&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;├── extensions&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── WebLaunch&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;│   │   ├── All WebLaunch files and
&lt;&#x2F;span&gt;&lt;span&gt;|   │   └── settings.js
&lt;&#x2F;span&gt;&lt;span&gt;|── documents&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── KUAL-KDK-2.0.azw2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;settings &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;{ 
&lt;&#x2F;span&gt;&lt;span&gt;	url&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;http:&#x2F;&#x2F;192.168.178.***&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; IP address of your dashboard (make sure it&amp;#39;s accessible via HTTP), you can also specify a local HTML file, e.g. &amp;#39;control.html&amp;#39;, which must then be in the &amp;#39;bin&amp;#39; folder.
&lt;&#x2F;span&gt;&lt;span&gt;	title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Pip-Boy Home&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, 
&lt;&#x2F;span&gt;&lt;span&gt;	hideStatusbar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	enableWireless&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	powerButtonClose&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	enablePreventScreenSaver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	landscape&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;now-it-s-your-turn&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#now-it-s-your-turn&quot; aria-label=&quot;Anchor link for: now-it-s-your-turn&quot;&gt;Now It&#x27;s Your Turn!&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;After successfully jailbreaking your Kindle and installing KUAL and WebLaunch, you can now create your own Smart Home dashboard. Here&#x27;s a simple example of how you can design an HTML page for your dashboard:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;en&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;viewport&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;Smart Home Dashboard&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dashboard&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;Welcome to Your Smart Home Dashboard&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;button &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;onclick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;toggleLight1&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;Light On&#x2F;Off&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Here you can add more Smart Home control elements --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;toggleLight1&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Here goes the code to control your Smart Home light
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;xmlhttp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;XMLHttpRequest&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Example for a Shelly API request
&lt;&#x2F;span&gt;&lt;span&gt;			xmlhttp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;GET&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;http:&#x2F;&#x2F;192.168.178.***&#x2F;light&#x2F;0?turn=toggle&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;			xmlhttp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;send&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Remember that Kindle only supports JavaScript with limited functionality. Modern features like fetch are missing.
&lt;&#x2F;span&gt;&lt;span&gt;		}
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here&#x27;s what my result looks like:&lt;&#x2F;p&gt;
&lt;style&gt;
     .containerimg img {
        width: 200px;
       min-height: 200px;
        margin: 0 10px;
    }
  .containerimg  .full {
        width: 95%;
        height: auto;
        margin: 0 10px;
    }
&lt;&#x2F;style&gt;
&lt;div  class=&quot;containerimg&quot; style=&quot;
    text-align: center;
    display: flex;
    overflow: scroll;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;&quot;&gt;
&lt;img class=&quot;full&quot; src=&quot;&#x2F;posts&#x2F;another-magic-home-dashboard-with-kindle&#x2F;images&#x2F;image1.jpeg&quot; alt=&quot;Photo of the Kindle&quot;&gt;
&lt;img  class=&quot;full&quot; src=&quot;&#x2F;posts&#x2F;another-magic-home-dashboard-with-kindle&#x2F;images&#x2F;image2.jpeg&quot; alt=&quot;Photo of the Kindle&quot;&gt;
&lt;img  class=&quot;full&quot; src=&quot;&#x2F;posts&#x2F;another-magic-home-dashboard-with-kindle&#x2F;images&#x2F;image3.jpeg&quot; alt=&quot;Photo of the Kindle&quot;&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;Conclusion&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;A dusty e-reader from 2011 has become a functional Smart Home dashboard - and with surprisingly little effort. The Kindle impresses with its power-efficient E-Ink screen, simple operation, and robust hardware.&lt;&#x2F;p&gt;
&lt;p&gt;What started as an experiment has now been running reliably for months and controls lights, music, and other Smart Home devices daily. Old hardware doesn&#x27;t have to gather dust in the closet - sometimes it just needs a new purpose. And if the apocalypse does come, we already have a working terminal.&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/another-magic-home-dashboard-with-kindle/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/another-magic-home-dashboard-with-kindle/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> Technology... technology never changes! - or does it? How I created a smart home dashboard on an old jailbroken Kindle 4 Touch using HTML, PHP, CSS, and JavaScript. A simple tutorial from jailbreaking to the finished dashboard. </info>
        </item>
        <item>
            <title>How to Brew a Magical Smart Home Dashboard with Three Ingredients</title>
            <pubDate>Tue, 26 Aug 2025 12:00:00 +0100</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/home-dashboard-pixelart-pointandclick/</link>
            <guid>https://simeon.staneks.de/en/posts/home-dashboard-pixelart-pointandclick/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/home-dashboard-pixelart-pointandclick/">&lt;h1 id=&quot;how-to-brew-a-magical-smart-home-dashboard-with-three-ingredients&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-to-brew-a-magical-smart-home-dashboard-with-three-ingredients&quot; aria-label=&quot;Anchor link for: how-to-brew-a-magical-smart-home-dashboard-with-three-ingredients&quot;&gt;How to Brew a Magical Smart Home Dashboard with Three Ingredients&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;em&gt;or: &quot;My name is Simeon Stanek and I want to become a pirate errr... programmer!&quot;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As a tech enthusiast with a Smart Home system, I faced a puzzle that even the mighty Voodoo priest of Mêlée Island™ couldn&#x27;t have solved: How do you control a modern home without getting lost in a maze of apps? The answer was as simple as mixing a grog: I would develop my own dashboard - with the three magical ingredients of the web: HTML, CSS, and JavaScript.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-concept-an-interface-that-would-even-impress-lechuck&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-concept-an-interface-that-would-even-impress-lechuck&quot; aria-label=&quot;Anchor link for: the-concept-an-interface-that-would-even-impress-lechuck&quot;&gt;The Concept: An Interface That Would Even Impress LeChuck&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The dashboard should be one thing above all: functional. I needed an overview of different rooms and the ability to control lights and other devices. The user interface should be intuitive and adapt to my habits.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-technical-implementation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-technical-implementation&quot; aria-label=&quot;Anchor link for: the-technical-implementation&quot;&gt;The Technical Implementation&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The project is based on three main components:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;HTML&lt;&#x2F;strong&gt; for the structure&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;CSS&lt;&#x2F;strong&gt; for the design&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;JavaScript&lt;&#x2F;strong&gt; for interactivity&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The data is stored in a JSON file that acts as a kind of simple database. This allows me to make changes to the configuration without touching the code.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-rooms-my-personal-scumm-bar&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-rooms-my-personal-scumm-bar&quot; aria-label=&quot;Anchor link for: the-rooms-my-personal-scumm-bar&quot;&gt;The Rooms - My Personal SCUMM Bar&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The dashboard shows different rooms of my home - kind of like a modern version of the SCUMM Bar, only here instead of grog, various Smart Home beverages are served:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Living room (definitely better lighting than in the tavern)&lt;&#x2F;li&gt;
&lt;li&gt;Bedroom (perfect for a power nap between adventures)&lt;&#x2F;li&gt;
&lt;li&gt;Hallway (first impressions count, even without a talking skull)&lt;&#x2F;li&gt;
&lt;li&gt;Dining room (here even the Root Beer™ tastes good)&lt;&#x2F;li&gt;
&lt;li&gt;Kitchen (for unforgettable background music while cooking)&lt;&#x2F;li&gt;
&lt;li&gt;1st Floor (where the secret treasures are stored)&lt;&#x2F;li&gt;
&lt;li&gt;TV room (for epic movie nights)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Each room is represented by its own image and shows the current status of the devices - completely without voodoo spells or talking skulls. I chose the images so they represent each room well while creating an atmospheric mood.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-control-a-mini-point-and-click-adventure&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-control-a-mini-point-and-click-adventure&quot; aria-label=&quot;Anchor link for: the-control-a-mini-point-and-click-adventure&quot;&gt;The Control: A Mini Point-and-Click Adventure&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;As a big fan of point-and-click adventure games, I wanted to bring some of that playful charm to my dashboard. Instead of ordinary buttons, I opted for an HTML Image Map - a technique that many might still remember from classic adventure games. You simply click directly on the objects in the room you want to control, just like in an adventure game.&lt;&#x2F;p&gt;
&lt;p&gt;For each device, there are clickable areas in the room image:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Main lighting - a click on the ceiling lamp&lt;&#x2F;li&gt;
&lt;li&gt;Ambient lighting (like the floor lamp in the living room) - click directly on the lamp&lt;&#x2F;li&gt;
&lt;li&gt;Other devices (like music in the kitchen) - simply click the corresponding device&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Status changes are immediately displayed visually, so you can see at a glance which devices are turned on - almost like when you solve a puzzle in an adventure game and the environment changes. This playful interaction makes the control not only functional but also entertaining.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;implementation-highlights&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#implementation-highlights&quot; aria-label=&quot;Anchor link for: implementation-highlights&quot;&gt;Implementation Highlights&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;efficient-data-management&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#efficient-data-management&quot; aria-label=&quot;Anchor link for: efficient-data-management&quot;&gt;Efficient Data Management&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The data is stored in a JSON file:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data.json&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;wohnzimmer&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;items&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;            {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Licht Wohnzimmer&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;coords&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;972,194,120&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;shape&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;circle&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ip&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;192.168.178.***&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;device&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;shelly&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;onclick&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;shelly(&amp;#39;192.168.178.***&amp;#39;, &amp;#39;light&amp;#39;, &amp;#39;toggle&amp;#39;)&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;            }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Stehlampe Wohnzimmer&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;coords&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1395,797,1467,489&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;shape&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rect&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ip&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;192.168.178.***&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;device&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;shelly&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;onclick&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;shelly(&amp;#39;192.168.178.***&amp;#39;, &amp;#39;relay&amp;#39;, &amp;#39;toggle&amp;#39;)&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        ]
&lt;&#x2F;span&gt;&lt;span&gt;    }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f51818;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;image-optimization&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#image-optimization&quot; aria-label=&quot;Anchor link for: image-optimization&quot;&gt;Image Optimization&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The images were carefully selected and optimized to ensure fast loading times. For status changes, small, efficient PNG files or GIF files for animations are used.&lt;&#x2F;p&gt;
&lt;p&gt;By the way: All images were generated with ChatGPT. I simply took photos of my rooms and then added them as attachments to the prompt &quot;Transform this into a pixel art image like in a point-and-click adventure.&quot; The results turned out surprisingly good!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;structure-and-examples&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#structure-and-examples&quot; aria-label=&quot;Anchor link for: structure-and-examples&quot;&gt;Structure and Examples&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;structure&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#structure&quot; aria-label=&quot;Anchor link for: structure&quot;&gt;Structure&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The project follows a clear folder structure:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;├── css&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── style.css
&lt;&#x2F;span&gt;&lt;span&gt;│   └── style.min.css
&lt;&#x2F;span&gt;&lt;span&gt;├── js&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── script.js
&lt;&#x2F;span&gt;&lt;span&gt;│   └── script.min.js
&lt;&#x2F;span&gt;&lt;span&gt;├── images&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;│   └── [various images for rooms and status]
&lt;&#x2F;span&gt;&lt;span&gt;├── data.json
&lt;&#x2F;span&gt;&lt;span&gt;└── index.html
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;examples&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#examples&quot; aria-label=&quot;Anchor link for: examples&quot;&gt;Examples&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;video controls style=&quot;max-width: 100%; height: auto;&quot;&gt;
  &lt;source src=&quot;images&#x2F;clip.mp4&quot; type=&quot;video&#x2F;mp4&quot;&gt;
  Your browser does not support the video tag.
&lt;&#x2F;video&gt;
&lt;h2 id=&quot;conclusion-and-outlook-the-end-of-this-developer-story&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion-and-outlook-the-end-of-this-developer-story&quot; aria-label=&quot;Anchor link for: conclusion-and-outlook-the-end-of-this-developer-story&quot;&gt;Conclusion and Outlook - The End of This Developer Story&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The dashboard fulfills its purpose better than a rubber chicken with a pulley: It provides a simple, fast, and reliable way to control my Smart Home. Using web technologies makes it incredibly flexible.&lt;&#x2F;p&gt;
&lt;p&gt;For the future, I&#x27;m planning some extensions (or as Murray would say: &quot;Mighty plans!&quot;):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Integration of additional Smart Home devices (maybe even a Root Beer™ dispenser?)&lt;&#x2F;li&gt;
&lt;li&gt;Automation rules directly in the dashboard (more complicated than the recipe for Monkey Island™ grog)&lt;&#x2F;li&gt;
&lt;li&gt;Usage statistics&lt;&#x2F;li&gt;
&lt;li&gt;Energy consumption monitoring&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The project shows that you can create an effective solution even with simple means - completely without a talking skull. Sometimes you just need three ingredients and the courage of a wannabe pirate to create something great.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;As Guybrush Threepwood would say: &quot;That&#x27;s the second-best dashboard I&#x27;ve ever seen!&quot; - &quot;Second-best? What&#x27;s the best?&quot; - &quot;Oh, I haven&#x27;t found that yet, but with such a big ocean out there, there must be a better one somewhere!&quot;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/home-dashboard-pixelart-pointandclick/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/home-dashboard-pixelart-pointandclick/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> Yarr! In this article, I show how I created an interactive Smart Home Dashboard with HTML, CSS, and JavaScript - essentially the three ingredients of a powerful voodoo spell. A story about point-and-click magic and modern technology. </info>
        </item>
        <item>
            <title>Backup: Affordable and Easy with Hetzner Storagebox and restic</title>
            <pubDate>Mon, 28 Jul 2025 22:59:00 +0100</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/backup-cheap-and-easy/</link>
            <guid>https://simeon.staneks.de/en/posts/backup-cheap-and-easy/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/backup-cheap-and-easy/">&lt;h2 id=&quot;the-genesis-when-data-goes-missing&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-genesis-when-data-goes-missing&quot; aria-label=&quot;Anchor link for: the-genesis-when-data-goes-missing&quot;&gt;The Genesis: When Data Goes Missing&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;As a self-hoster and tech enthusiast, you often get yourself into self-made predicaments. Some time ago, I had bought an affordable mini PC that was supposed to serve as a server for my various projects. Maybe I&#x27;ll create a list of my projects that I host in the near future. Anyway, Windows 11 was pre-installed and I thought I could work well with WSL2 and Docker. Since Backblaze offers a Windows client, I thought the backup problem was solved. But as it happens, things turned out differently. My data like videos and pictures, which were stored on an external hard drive, were gradually uploaded to Backblaze, but somehow and for no reason not completely. One day the hard drive died and I ordered a recovery drive from Backblaze. When the drive arrived, I was very disappointed that only a fraction of my data was recovered. I had a backup, but it was incomplete and I had no idea why.&lt;&#x2F;p&gt;
&lt;p&gt;Long story short: I needed a new backup solution that is easy to use and works reliably. And that&#x27;s how I came across Hetzner Storagebox and restic.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-concept-external-backup-at-hetzner-encrypted-with-restic&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-concept-external-backup-at-hetzner-encrypted-with-restic&quot; aria-label=&quot;Anchor link for: the-concept-external-backup-at-hetzner-encrypted-with-restic&quot;&gt;The Concept: External Backup at Hetzner, Encrypted with restic&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;In case your own hardware breaks, the house burns down, or a ransomware attack encrypts your data, it&#x27;s important to have an external backup. I chose a Hetzner Storagebox because it&#x27;s affordable and easy to use. At a price of 12.97 euros per month for 5 TB of storage space, it&#x27;s one of the most affordable solutions on the market and actually comes close to Backblaze&#x27;s great offer.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;software-and-setup&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#software-and-setup&quot; aria-label=&quot;Anchor link for: software-and-setup&quot;&gt;Software and Setup&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;First of all, you need a Hetzner account. If you don&#x27;t have one yet, you can sign up &lt;a href=&quot;https:&#x2F;&#x2F;hetzner.cloud&#x2F;?ref=znuwnh4Uno3D&quot;&gt;here&lt;&#x2F;a&gt; and get 20 euros credit as a gift. This is a personal referral link from me.&lt;&#x2F;p&gt;
&lt;p&gt;With the storagebox, you can then decide how you want to access it. I access it via SFTP since I already have experience with it. Username, server address, and password are needed to connect to the Storagebox. I use the tool &lt;a href=&quot;https:&#x2F;&#x2F;rclone.org&#x2F;&quot;&gt;rclone&lt;&#x2F;a&gt; for this, which offers a simple way to integrate an external host into your own system.&lt;&#x2F;p&gt;
&lt;p&gt;With the command &lt;code&gt;rclone config&lt;&#x2F;code&gt; you set up the connection. Here, a new remote host is created that points to the Storagebox. The configuration is simple and self-explanatory, as rclone guides you through the process. You just need to enter the access data and select the type of connection (in this case SFTP).&lt;&#x2F;p&gt;
&lt;p&gt;For the backup itself, I use the tool &lt;a href=&quot;https:&#x2F;&#x2F;restic.net&#x2F;&quot;&gt;restic&lt;&#x2F;a&gt;, which encrypts your data and backs it up incrementally. It also compresses the data so you need less storage space. This way I compressed my data from 3.62 TB to 2.67 TB.&lt;&#x2F;p&gt;
&lt;p&gt;You probably don&#x27;t need a separate system for backups, but I created an extra Alpine LXC (Linux Container) that is only responsible for backups. This has the advantage that I can easily rebuild the system if something goes wrong and it runs independently of my other systems. I use Proxmox for this, but that&#x27;s optional of course.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;rclone&lt;&#x2F;code&gt; and &lt;code&gt;restic&lt;&#x2F;code&gt; are available for almost all operating systems anyway and can be easily installed.&lt;&#x2F;p&gt;
&lt;p&gt;You can find a more detailed guide for installing and configuring rclone and restic in the &lt;a href=&quot;https:&#x2F;&#x2F;restic.readthedocs.io&#x2F;en&#x2F;stable&#x2F;&quot;&gt;restic documentation&lt;&#x2F;a&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;rclone.org&#x2F;docs&#x2F;&quot;&gt;rclone documentation&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;backup&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#backup&quot; aria-label=&quot;Anchor link for: backup&quot;&gt;Backup&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Initially, I thought I could write a great script with Claude from Anthropic that would automate my backups. But I ended up doing it myself because the AI overcomplicated the process for me. The following Bash script backs up my data:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#!&#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Simeon&amp;#39;s Backup Script for Hetzner
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# =============================================================================
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# SETTINGS - Adjust here!
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# =============================================================================
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;SOURCE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;mnt&#x2F;f&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Source directory to be backed up, so the entire 3.62 TB so far.
&lt;&#x2F;span&gt;&lt;span&gt;REMOTE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rclone:Hetzner:backup&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Remote host that points to the Hetzner Storagebox
&lt;&#x2F;span&gt;&lt;span&gt;PASSWORD_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;etc&#x2F;restic-password&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# File with the password for restic
&lt;&#x2F;span&gt;&lt;span&gt;LOG_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;var&#x2F;log&#x2F;backup_$&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; +%&lt;&#x2F;span&gt;&lt;span&gt;A)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;.log&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Log file for the backup
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# =============================================================================
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Check if restic is already running
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;pgrep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;restic&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;dev&#x2F;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;then
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; +%&lt;&#x2F;span&gt;&lt;span&gt;Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt;H&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;S)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; - A backup is already running.&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;LOG_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;A backup is already running.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt; 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; +%&lt;&#x2F;span&gt;&lt;span&gt;Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt;H&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;S)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; - Backup starting...&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;LOG_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;START_TIME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; +%&lt;&#x2F;span&gt;&lt;span&gt;s)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Optimized restic parameters for maximum speed
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;restic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;REMOTE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; backup &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;SOURCE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --password-file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;PASSWORD_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --tag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;backup-$&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; +%&lt;&#x2F;span&gt;&lt;span&gt;Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;d)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --verbose --verbose &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --pack-size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;64 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --compression&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;max &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude-caches &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --one-file-system &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;node_modules&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.git&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.cache&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;tmp&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;logs&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;cache&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;platforms&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;vendor&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.obsidian&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.@__thumb&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*.log&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*.tmp&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*~&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.DS_Store&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Thumbs.db&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;desktop.ini&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;thumbs&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    --exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Proxmox&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;LOG_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Check if the backup was successful
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;-eq&lt;&#x2F;span&gt;&lt;span&gt; 0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;then
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; +%&lt;&#x2F;span&gt;&lt;span&gt;Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt;H&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;S)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; - Backup successful!&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;LOG_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;restic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;REMOTE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; unlock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --password-file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;PASSWORD_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;LOG_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; +%&lt;&#x2F;span&gt;&lt;span&gt;Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt;H&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;S)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; - Old backups are being cleaned up...&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;LOG_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;restic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;REMOTE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; forget&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --keep-last&lt;&#x2F;span&gt;&lt;span&gt; 10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --prune --password-file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;PASSWORD_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;LOG_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    END_TIME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; +%&lt;&#x2F;span&gt;&lt;span&gt;s)
&lt;&#x2F;span&gt;&lt;span&gt;    DURATION&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;END_TIME &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; START_TIME&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Backup completed in $&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;DURATION &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;60&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; minutes and $&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;DURATION &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;60&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; seconds.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; +%&lt;&#x2F;span&gt;&lt;span&gt;Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt;H&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;S)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; - Backup completed in $&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;DURATION &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;60&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; minutes and $&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;DURATION &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;60&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; seconds.&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;LOG_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; +%&lt;&#x2F;span&gt;&lt;span&gt;Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;-%&lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt;H&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;:%&lt;&#x2F;span&gt;&lt;span&gt;S)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; - Backup failed!&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt; 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Beforehand, a repository must be created on the Storagebox so that restic knows where to save the data. This is done simply with the command:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;restic&lt;&#x2F;span&gt;&lt;span&gt; init&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;REMOTE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Additionally, the password for restic must be stored in the file &lt;code&gt;&#x2F;etc&#x2F;restic-password&lt;&#x2F;code&gt;. This file should of course only be readable by the root user so that no one can access the password without authorization.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;automation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#automation&quot; aria-label=&quot;Anchor link for: automation&quot;&gt;Automation&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;To automate the backup regularly, I use n8n as I&#x27;ve described in other articles. Of course, this could also be done with cron, but I just like n8n and it gives me a better overview of all workflows. I created a workflow that executes the script once a day at 2 AM. This way I always have a current backup of my data without having to worry about it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;backup-cheap-and-easy&#x2F;images&#x2F;n8n.png&quot; alt=&quot;Backup Workflow&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The following command is totally useful and I can recommend it to anyone who wants to automate their backup regularly:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;restic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;REMOTE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; forget&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --keep-last&lt;&#x2F;span&gt;&lt;span&gt; 10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --prune --password-file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span&gt;PASSWORD_FILE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This keeps the last 10 backups and deletes all older ones. This saves storage space and keeps the backup database organized. The &#x27;prune&#x27; command checks the repository and removes data that is no longer referenced and therefore no longer needed. The whole process naturally takes a bit longer because of this, but on a normal day it&#x27;s only about 5-10 minutes since I only need to back up the new data.&lt;&#x2F;p&gt;
&lt;p&gt;For me, it&#x27;s also very practical that everything is written to a log file that I can look at anytime. This way I can see if the backup was successful and how long it took. These files are named by day of the week, so I always have the logs from the last week. This is especially useful when I have a problem with the backup and want to check what went wrong.&lt;&#x2F;p&gt;
&lt;p&gt;The nice thing about n8n is also that I get a notification via Telegram after the completed backup. This way I always know if the backup was successful or if there was a problem. This gives me a good feeling that my data is safe.&lt;&#x2F;p&gt;
&lt;p&gt;The following diagram shows the backup process:&lt;&#x2F;p&gt;
&lt;style&gt;
.mermaid svg{
max-height: 100% !important;
}
&lt;&#x2F;style&gt;
&lt;pre class=&quot;mermaid&quot;&gt;
flowchart TD
    A[&amp;quot;Data&amp;lt;br&amp;#x2F;&amp;gt;3.62 TB&amp;quot;] --&amp;gt; B[&amp;quot;Alpine LXC Container&amp;quot;]
    
    B --&amp;gt; C[&amp;quot;rclone SFTP Connection&amp;quot;]
    C --&amp;gt; D[&amp;quot;restic Backup&amp;quot;]
    D --&amp;gt; E[&amp;quot;Encryption + Compression&amp;quot;]
    
    E --&amp;gt; F[&amp;quot;Hetzner Storagebox&amp;lt;br&amp;#x2F;&amp;gt;5TB &amp;#x2F; 12.97€&amp;quot;]
    
    F --&amp;gt; G{Backup successful?}
    G --&amp;gt;|Yes| H[&amp;quot;Delete old backups&amp;lt;br&amp;#x2F;&amp;gt;keep-last 10&amp;quot;]
    G --&amp;gt;|No| I[&amp;quot;Error Log&amp;quot;]
    
    H --&amp;gt; J[&amp;quot;Success Log&amp;quot;]
    J --&amp;gt; L[&amp;quot;Telegram: Backup successful&amp;quot;]
    I --&amp;gt; M[&amp;quot;Telegram: Backup failed&amp;quot;]
    
    K[&amp;quot;Daily 2:00 AM&amp;quot;] --&amp;gt; B
    
    style A fill:#e1f5fe
    style F fill:#c8e6c9
    style E fill:#fff3e0
    style J fill:#e8f5e8
    style I fill:#ffebee
    style L fill:#f3e5f5
    style M fill:#f3e5f5
&lt;&#x2F;pre&gt;&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;Conclusion&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;With this solution, I found a simple, affordable, and reliable backup solution that safely stores my data. I can recommend anyone who wants to back up their data to use a Hetzner Storagebox and restic. It&#x27;s easy to set up, cost-effective, and offers high security through encryption. It&#x27;s also easy to automate the backups and run them regularly. This way I always have a current backup of my data without having to worry about it. And the best part is that I no longer have to worry about my data being lost. I hope this article helps you find a similar solution for your backups.&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/backup-cheap-and-easy/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/backup-cheap-and-easy/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> When it comes to backups, you should never wait too long. This article briefly describes how one of my backup solutions works. I use a Hetzner Storagebox and the tool restic to secure my data. The whole thing is simple, affordable, and works reliably. </info>
        </item>
        <item>
            <title>Useful Escape Room Technology: Rotary Phone as Input Device</title>
            <pubDate>Wed, 28 May 2025 22:59:00 +0100</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/useful-escape-room-technology/</link>
            <guid>https://simeon.staneks.de/en/posts/useful-escape-room-technology/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/useful-escape-room-technology/">&lt;h1 id=&quot;the-genesis-when-nostalgia-meets-technology&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-genesis-when-nostalgia-meets-technology&quot; aria-label=&quot;Anchor link for: the-genesis-when-nostalgia-meets-technology&quot;&gt;The Genesis: When Nostalgia Meets Technology&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;As a small hobbyist, I&#x27;m constantly searching for creative solutions for my escape rooms in confirmation preparation. For three years now, I&#x27;ve been regularly building tricky puzzle courses for confirmation preparation in the Werdenfels-Rottenbuch deanery and love experimenting with unusual input devices.&lt;&#x2F;p&gt;
&lt;p&gt;The idea came to me when I discovered an old rotary phone in my father&#x27;s basement. &quot;That would be perfect for an escape room!&quot;, I thought to myself. Imagine: participants have to dial a secret number, and only when they enter the correct combination does the next puzzle stage open. Pure nostalgia meets modern technology!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-concept-three-wires-infinite-possibilities&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-concept-three-wires-infinite-possibilities&quot; aria-label=&quot;Anchor link for: the-concept-three-wires-infinite-possibilities&quot;&gt;The Concept: Three Wires, Infinite Possibilities&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;hardware-keep-it-simple&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#hardware-keep-it-simple&quot; aria-label=&quot;Anchor link for: hardware-keep-it-simple&quot;&gt;Hardware - Keep it simple!&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;For this project you really don&#x27;t need much:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;An old rotary phone (flea market, eBay, Kleinanzeigen, grandma&#x27;s attic 😉)&lt;&#x2F;li&gt;
&lt;li&gt;A WemosD1 Mini (ESP8266) - costs less than 5 euros&lt;&#x2F;li&gt;
&lt;li&gt;Three simple jumper cables&lt;&#x2F;li&gt;
&lt;li&gt;A suitable telephone socket (Telecommunications Connection Unit, also called TAE)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The brilliant part: You only need to connect three jumper cables to the telephone socket! No complicated soldering, no elaborate wiring. The ESP8266 reads the rotary pulses via the analog pin and interprets them as digits. You can see more details in the diagram below.&lt;&#x2F;p&gt;
&lt;style&gt;
.mermaid svg{
max-height: 100% !important;
}
&lt;&#x2F;style&gt;
&lt;pre class=&quot;mermaid&quot;&gt;
flowchart TD
    A[👤 Player rotates dial] --&amp;gt; B{📞 Rotary Phone}
    B --&amp;gt; C[⚡ Pulses via 3 wires]
    C --&amp;gt; D[🔧 WemosD1 Mini ESP8266]
    
    D --&amp;gt; E[📊 Analog Pin A0&amp;lt;br&amp;#x2F;&amp;gt;reads pulses]
    E --&amp;gt; F[🧮 Count pulses&amp;lt;br&amp;#x2F;&amp;gt;&amp;amp; debounce]
    F --&amp;gt; G[🔢 Recognize digit&amp;lt;br&amp;#x2F;&amp;gt;1 pulse = 1&amp;lt;br&amp;#x2F;&amp;gt;10 pulses = 0]
    
    G --&amp;gt; H[📝 Assemble complete&amp;lt;br&amp;#x2F;&amp;gt;number]
    H --&amp;gt; I{⏱️ Pause detected?&amp;lt;br&amp;#x2F;&amp;gt;3 seconds without input}
    
    I --&amp;gt;|No| G
    I --&amp;gt;|Yes| J[📡 Check WiFi connection]
    
    J --&amp;gt; K[🌐 HTTP GET Request&amp;lt;br&amp;#x2F;&amp;gt;to n8n Webhook]
    K --&amp;gt; L[🎯 n8n Workflow]
    
    L --&amp;gt; M[🔓 Escape Room Action]
    M --&amp;gt; N1[💡 Control Smart Home]
    M --&amp;gt; N2[📧 Send Email]  
    M --&amp;gt; N3[🔊 Play Sound]
    M --&amp;gt; N4[🚪 Open Lock]
    
    D --&amp;gt; B[📞 Rotary Phone &amp;amp; Buzzer for Feedback]
    B --&amp;gt; P1[📢 Pulse Beep]
    B --&amp;gt; P2[🎵 Digit Beep]
    B --&amp;gt; P3[✅ Success Melody]
    
    style A fill:#e1f5fe
    style B fill:#f3e5f5
    style D fill:#fff3e0
    style L fill:#e8f5e8
    style M fill:#fff8e1
&lt;&#x2F;pre&gt;&lt;h3 id=&quot;software-from-analog-to-digital&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#software-from-analog-to-digital&quot; aria-label=&quot;Anchor link for: software-from-analog-to-digital&quot;&gt;Software - From Analog to Digital&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The code is surprisingly simple. The rotary phone generates a specific number of pulses for each dialed digit:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Digit 1 = 1 pulse&lt;&#x2F;li&gt;
&lt;li&gt;Digit 2 = 2 pulses&lt;&#x2F;li&gt;
&lt;li&gt;...&lt;&#x2F;li&gt;
&lt;li&gt;Digit 0 = 10 pulses&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The ESP8266 counts these pulses, recognizes pauses between digits, and assembles the complete dialed number from them. As soon as a complete number is recognized, it sends it to an n8n webhook via HTTP request.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cpp&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-cpp &quot;&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Short code excerpt
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; If we&amp;#39;re counting a digit and there&amp;#39;s a pause, interpret the digit
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(countingDigit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;millis&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; lastPulseTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; interDigitDelay)) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; dialedDigit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(pulseCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; pulseCount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Dialed digit: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(dialedDigit)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Play a tone for the recognized digit
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playDigitBeep&lt;&#x2F;span&gt;&lt;span&gt;(dialedDigit)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Add the digit to the dialed number
&lt;&#x2F;span&gt;&lt;span&gt;    dialedNumber &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;(dialedDigit)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    lastDigitTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;millis&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Reset for the next digit
&lt;&#x2F;span&gt;&lt;span&gt;    pulseCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    countingDigit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;br&gt;
&lt;details&gt;
  &lt;summary&gt;Complete Code&lt;&#x2F;summary&gt;
&lt;pre data-lang=&quot;cpp&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-cpp &quot;&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;ESP8266WiFi.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;ESP8266HTTPClient.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;WiFiClient.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; WiFi Configuration
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const char&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; ssid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;MyWiFi&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Change this to your WiFi name
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const char&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;**********&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Change this to your WiFi password
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Webhook Configuration
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const char&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; webhookUrl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;http:&#x2F;&#x2F;example.com&#x2F;webhook&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Change this to your webhook URL - must not be SSL as ESP8266 doesn&amp;#39;t support SSL
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Configuration for the rotary phone
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; phonePin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; A0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;           &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Analog pin for the rotary phone
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; threshold &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Threshold value for pulse detection
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; debounceDelay &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Debounce time in milliseconds
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; interDigitDelay &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;700&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;   &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Time to wait before recognizing a new digit
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Buzzer &#x2F; Sound Output
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; buzzerPin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; D5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;          &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Pin for the buzzer or speaker
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; pulseBeepDuration &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Duration of beep tone in milliseconds
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; digitBeepDuration &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Duration of beep tone for recognized digits
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; digitBeepFrequency &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Pitch for recognized digits
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt; pulseState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;           &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Current pulse state
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt; lastPulseState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Previous pulse state
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; pulseCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Number of pulses (dial clicks)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;unsigned long&lt;&#x2F;span&gt;&lt;span&gt; lastPulseTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;   &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Time of last pulse
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt; countingDigit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Whether we&amp;#39;re currently counting a digit
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;String dialedNumber &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;          &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Stores the complete dialed number
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;unsigned long&lt;&#x2F;span&gt;&lt;span&gt; lastDigitTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;   &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Time of last recognized digit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; completeNumberDelay &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Time after last digit before number is considered complete
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; WiFi Management
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;unsigned long&lt;&#x2F;span&gt;&lt;span&gt; lastWifiCheckTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; wifiCheckInterval &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;30000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Check WiFi every 30 seconds
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setup&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;begin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9600&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;pinMode&lt;&#x2F;span&gt;&lt;span&gt;(phonePin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; INPUT)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;pinMode&lt;&#x2F;span&gt;&lt;span&gt;(buzzerPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; OUTPUT)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Disable WiFi sleep mode for more stable connection
&lt;&#x2F;span&gt;&lt;span&gt;  WiFi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setSleepMode&lt;&#x2F;span&gt;&lt;span&gt;(WIFI_NONE_SLEEP)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Connect to WiFi with higher timeout value
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;connectToWifi&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Rotary phone reader started&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;-------------------------&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Startup sound
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playSuccessSound&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Simple tone with specified frequency and duration
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playTone&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;frequency&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;duration&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; We use a simple on&#x2F;off tone for ESP8266
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Frequency is simulated by delay between switches
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;long&lt;&#x2F;span&gt;&lt;span&gt; delayValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000000 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt; frequency &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;long&lt;&#x2F;span&gt;&lt;span&gt; numCycles &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; frequency &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; duration &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;long&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt; numCycles&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalWrite&lt;&#x2F;span&gt;&lt;span&gt;(buzzerPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; HIGH)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delayMicroseconds&lt;&#x2F;span&gt;&lt;span&gt;(delayValue)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalWrite&lt;&#x2F;span&gt;&lt;span&gt;(buzzerPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; LOW)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delayMicroseconds&lt;&#x2F;span&gt;&lt;span&gt;(delayValue)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Short tone for detected pulses
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playPulseBeep&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalWrite&lt;&#x2F;span&gt;&lt;span&gt;(buzzerPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; HIGH)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(pulseBeepDuration)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalWrite&lt;&#x2F;span&gt;&lt;span&gt;(buzzerPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; LOW)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Tone for recognized digit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playDigitBeep&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;digit&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Play a tone with frequency proportional to digit
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; freq &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; digitBeepFrequency &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;(digit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Higher tone for higher digits
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playTone&lt;&#x2F;span&gt;&lt;span&gt;(freq&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; digitBeepDuration)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Success melody for successful sending
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playSuccessSound&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playTone&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playTone&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1500&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playTone&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;connectToWifi&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Connecting to WiFi &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(ssid)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;...&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  WiFi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mode&lt;&#x2F;span&gt;&lt;span&gt;(WIFI_STA)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Explicitly set station mode
&lt;&#x2F;span&gt;&lt;span&gt;  WiFi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;begin&lt;&#x2F;span&gt;&lt;span&gt;(ssid&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; password)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Set higher timeout value for connection (10 seconds)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; timeout &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; 10 second timeout
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;(WiFi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!=&lt;&#x2F;span&gt;&lt;span&gt; WL_CONNECTED &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt; timeout &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    timeout&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;--&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(WiFi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; WL_CONNECTED) {
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;WiFi connected!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;IP address: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(WiFi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;localIP&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playSuccessSound&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Tone for successful connection
&lt;&#x2F;span&gt;&lt;span&gt;  } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;WiFi connection failed. Will try again later.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Error tone for failed connection
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playTone&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;300&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;checkWifiConnection&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;millis&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; lastWifiCheckTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; wifiCheckInterval) {
&lt;&#x2F;span&gt;&lt;span&gt;    lastWifiCheckTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;millis&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(WiFi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!=&lt;&#x2F;span&gt;&lt;span&gt; WL_CONNECTED) {
&lt;&#x2F;span&gt;&lt;span&gt;      Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;WiFi connection lost. Trying to reconnect...&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      WiFi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;disconnect&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;connectToWifi&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Optional: Confirmation that WiFi is still connected
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Serial.println(&amp;quot;WiFi connection OK&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loop&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Regularly check WiFi connection
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;checkWifiConnection&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Read input from rotary phone
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; sensorValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;analogRead&lt;&#x2F;span&gt;&lt;span&gt;(phonePin)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Determine pulse state (high or low)
&lt;&#x2F;span&gt;&lt;span&gt;  pulseState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(sensorValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt; threshold)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Detection of falling edge (pulse start)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(pulseState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; !&lt;&#x2F;span&gt;&lt;span&gt;lastPulseState) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Debounce
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(debounceDelay)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Read again for confirmation
&lt;&#x2F;span&gt;&lt;span&gt;    sensorValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;analogRead&lt;&#x2F;span&gt;&lt;span&gt;(phonePin)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(sensorValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt; threshold) {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Valid pulse detected
&lt;&#x2F;span&gt;&lt;span&gt;      countingDigit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      pulseCount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      lastPulseTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;millis&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      
&lt;&#x2F;span&gt;&lt;span&gt;      Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Pulse detected! Count: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(pulseCount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Generate short signal tone for each detected pulse
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playPulseBeep&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; If we&amp;#39;re counting a digit and there&amp;#39;s a pause, interpret the digit
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(countingDigit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;millis&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; lastPulseTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; interDigitDelay)) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; dialedDigit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(pulseCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; pulseCount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Dialed digit: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(dialedDigit)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Play a tone for the recognized digit
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playDigitBeep&lt;&#x2F;span&gt;&lt;span&gt;(dialedDigit)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Add the digit to the dialed number
&lt;&#x2F;span&gt;&lt;span&gt;    dialedNumber &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;(dialedDigit)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    lastDigitTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;millis&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Reset for the next digit
&lt;&#x2F;span&gt;&lt;span&gt;    pulseCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    countingDigit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Check if complete number was dialed (no new digit for X seconds)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(dialedNumber&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;millis&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; lastDigitTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; completeNumberDelay)) {
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Complete dialed number: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(dialedNumber)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Send number to webhook
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendNumberToWebhook&lt;&#x2F;span&gt;&lt;span&gt;(dialedNumber)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Reset for next number
&lt;&#x2F;span&gt;&lt;span&gt;    dialedNumber &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Save current state for next comparison
&lt;&#x2F;span&gt;&lt;span&gt;  lastPulseState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; pulseState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Small delay for stability
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendNumberToWebhook&lt;&#x2F;span&gt;&lt;span&gt;(String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Check WiFi connection
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(WiFi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; WL_CONNECTED) {
&lt;&#x2F;span&gt;&lt;span&gt;    WiFiClient client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    HTTPClient http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Create URL with dialed number
&lt;&#x2F;span&gt;&lt;span&gt;    String url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;(webhookUrl) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;?number=&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sending number to webhook: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(url)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Start HTTP connection with higher timeout
&lt;&#x2F;span&gt;&lt;span&gt;    http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;begin&lt;&#x2F;span&gt;&lt;span&gt;(client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; url)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setTimeout&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; 10 second timeout for HTTP connection
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Send HTTP GET request
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; httpResponseCode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GET&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(httpResponseCode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;      Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;HTTP response code: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(httpResponseCode)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      String payload &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getString&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(payload)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Play success sound
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playSuccessSound&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;      Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Error in HTTP request. Error code: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(httpResponseCode)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Play error tone
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playTone&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;300&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; End HTTP connection
&lt;&#x2F;span&gt;&lt;span&gt;    http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;WiFi not connected. Number will be cached and sent later.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Play error tone
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;playTone&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;300&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;details&gt;
&lt;br&gt;
&lt;style&gt;
  .containerimg  img {
        width: 200px;
        height: auto;
        margin: 0 10px;
    }
&lt;&#x2F;style&gt;
&lt;div class=&quot;containerimg&quot; style=&quot;
    text-align: center;
    display: flex;
    overflow: scroll;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;useful-escape-room-technology&#x2F;images&#x2F;drehscheibe00001.jpg&quot; alt=&quot;Rotary Phone&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;useful-escape-room-technology&#x2F;images&#x2F;drehscheibe00003.jpg&quot; alt=&quot;TAE Socket&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;useful-escape-room-technology&#x2F;images&#x2F;drehscheibe00004.jpg&quot; alt=&quot;TAE Socket Connection&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;useful-escape-room-technology&#x2F;images&#x2F;drehscheibe00002.jpg&quot; alt=&quot;ESP8266&quot;&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;the-possibilities-more-than-just-a-phone&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-possibilities-more-than-just-a-phone&quot; aria-label=&quot;Anchor link for: the-possibilities-more-than-just-a-phone&quot;&gt;The Possibilities: More Than Just a Phone&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Even though I haven&#x27;t used the phone in one of my escape rooms yet, countless ideas are already swirling around in my head:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;🔐 Classic Safe Code:&lt;&#x2F;strong&gt; Participants must dial a specific number to receive the next clue.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;📋 Contact List Puzzle:&lt;&#x2F;strong&gt; &quot;Call your grandfather!&quot; - Players must first figure out which number to dial.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;🎵 Musical Codes:&lt;&#x2F;strong&gt; Each digit plays a different tone - the correct melody opens the lock.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;⏰ Time Travel Scenarios:&lt;&#x2F;strong&gt; Perfect for 70s&#x2F;80s settings - it doesn&#x27;t get more authentic!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;🔄 Sequence Puzzles:&lt;&#x2F;strong&gt; Multiple numbers must be dialed in a specific order.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-webhook-magic-n8n-makes-it-possible&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-webhook-magic-n8n-makes-it-possible&quot; aria-label=&quot;Anchor link for: the-webhook-magic-n8n-makes-it-possible&quot;&gt;The Webhook Magic: n8n Makes It Possible&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The beautiful thing about this solution: Through n8n you can connect the dialed numbers with practically anything:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Control smart home devices&lt;&#x2F;li&gt;
&lt;li&gt;Send emails&lt;&#x2F;li&gt;
&lt;li&gt;Call other APIs&lt;&#x2F;li&gt;
&lt;li&gt;Fill databases&lt;&#x2F;li&gt;
&lt;li&gt;And much more!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A simple HTTP request is enough, and your entire escape room system reacts to the dialed number.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;why-you-should-try-it-yourself&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#why-you-should-try-it-yourself&quot; aria-label=&quot;Anchor link for: why-you-should-try-it-yourself&quot;&gt;Why You Should Try It Yourself&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;This project is perfect for tinkerers who like to play with technology.
You&#x27;ll learn:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Reading Analog Signals&lt;&#x2F;strong&gt; - How hardware and software work together&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;WiFi Communication&lt;&#x2F;strong&gt; - Understanding webhooks and HTTP requests&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Debouncing and Timing&lt;&#x2F;strong&gt; - Complicated but exciting programming concepts&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Audio Feedback&lt;&#x2F;strong&gt; - Improving user interaction&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And the best part: Success is guaranteed! When the webhook is called for the first time after you dial a number, it&#x27;s a magical moment.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;let-s-go-muscle&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#let-s-go-muscle&quot; aria-label=&quot;Anchor link for: let-s-go-muscle&quot;&gt;Let&#x27;s Go! 💪&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Got the urge to hack a rotary phone yourself? Perfect! Grab an old phone, order an ESP8266, and just get started. The code is simple, the hardware is manageable, and the possibilities are endless.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Happy Hacking!&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/useful-escape-room-technology/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/useful-escape-room-technology/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> In this article I describe how to use an old rotary phone as an input device for escape rooms. I explain the technical implementation, programming, and integration into an escape room concept. The article is aimed at technology enthusiasts and escape room aficionados. </info>
        </item>
        <item>
            <title>Gameboy Games for Educational and Pastoral Work</title>
            <pubDate>Wed, 30 Apr 2025 22:59:00 +0100</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/gameboy-games-for-education-and-pastoral-work/</link>
            <guid>https://simeon.staneks.de/en/posts/gameboy-games-for-education-and-pastoral-work/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/gameboy-games-for-education-and-pastoral-work/">&lt;h1 id=&quot;the-genesis-gameboy-games-for-educational-and-pastoral-work&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-genesis-gameboy-games-for-educational-and-pastoral-work&quot; aria-label=&quot;Anchor link for: the-genesis-gameboy-games-for-educational-and-pastoral-work&quot;&gt;The Genesis: Gameboy Games for Educational and Pastoral Work&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Those who follow my blog might suspect that I&#x27;m a bit of a retro gaming fan. To my regret, I never owned a Gameboy, but that didn&#x27;t stop me from exploring the topic. When I was working on my app for confirmation preparation (feiafanga) in the Werdenfels-Rottenbuch deanery three years ago, I had the idea that I could create Gameboy games to gamify educational content. I searched for a tool to create Gameboy games and discovered &lt;a href=&quot;https:&#x2F;&#x2F;www.gbstudio.dev&#x2F;&quot;&gt;GB Studio&lt;&#x2F;a&gt;. This tool allows you to create actual Gameboy games that run on original Gameboy hardware, without requiring programming knowledge. The tool is very easy to use, and I recommend it to anyone interested in Gameboy games. It also offers the ability to export games as HTML5 games that run in a browser, which is fantastic because I can integrate the games directly into my app.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;preparation-for-creating-a-gameboy-game&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#preparation-for-creating-a-gameboy-game&quot; aria-label=&quot;Anchor link for: preparation-for-creating-a-gameboy-game&quot;&gt;Preparation for Creating a Gameboy Game&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Here I&#x27;d like to briefly explain what you need to create a short Gameboy game:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;GB Studio&lt;&#x2F;strong&gt;: This is the tool for creating games. It&#x27;s free and open source.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;GB Assets&lt;&#x2F;strong&gt;: These are the graphics you need for your game. You can create them yourself or search online. Many sites offer free graphics.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;GB Emulator&lt;&#x2F;strong&gt;: This is a program for testing your games. There are many emulators available for free download, plus the game can be exported as an HTML5 game from within GB Studio.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;GB Music&lt;&#x2F;strong&gt;: This is the music you need. You can create it yourself or search online. Many sites offer free music.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Story&lt;&#x2F;strong&gt;: This is the story you want to tell. You can write it yourself or get help from a language model. Many sites offer free stories. In an educational context, it&#x27;s important that the story has a connection to the topic you want to convey.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;LDtk&lt;&#x2F;strong&gt;: This is a tool for creating levels. It&#x27;s free and open source. You can download it here: &lt;a href=&quot;https:&#x2F;&#x2F;ldtk.io&#x2F;&quot;&gt;LDtk&lt;&#x2F;a&gt;. The tool is very easy to use, and I recommend it to anyone interested in Gameboy games. There are many tutorials online to help you understand the tool.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;creation-based-on-an-example&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#creation-based-on-an-example&quot; aria-label=&quot;Anchor link for: creation-based-on-an-example&quot;&gt;Creation Based on an Example&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;example-images&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#example-images&quot; aria-label=&quot;Anchor link for: example-images&quot;&gt;Example Images&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;style&gt;
  .containerimg  img {
        width: 200px;
        height: auto;
        margin: 0 10px;
    }
&lt;&#x2F;style&gt;
&lt;div class=&quot;containerimg&quot; style=&quot;
    text-align: center;
    display: flex;
    overflow: scroll;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;gb00001.jpg&quot; alt=&quot;Gameboy image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;gb00002.jpg&quot; alt=&quot;Gameboy image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;gb00003.jpg&quot; alt=&quot;Gameboy image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;gb00004.jpg&quot; alt=&quot;Gameboy image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;gb00005.jpg&quot; alt=&quot;Gameboy image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;gb00006.jpg&quot; alt=&quot;Gameboy image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;gb00007.jpg&quot; alt=&quot;Gameboy image&quot;&gt;
&lt;&#x2F;div&gt;
&lt;h3 id=&quot;the-story&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-story&quot; aria-label=&quot;Anchor link for: the-story&quot;&gt;The Story&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;For the feiafanga app, I created small and short games, all related to confirmation preparation themes. I use the seven gifts of the Holy Spirit as the foundation for the games. The games are all very short and simple so they can be used in confirmation preparation. I came up with a short story that I then incorporated into the games. The stories are about Eli, who is on the way to the first confirmation class. Along the way, Eli encounters different tasks related to the gifts of the Holy Spirit. After Eli solves the task, the player receives a badge in the app. Here&#x27;s the short story for the gift of knowledge:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Eli is still on the way to the first confirmation class. Eli passes by the library and realizes that going through the library would be faster. Since the door to the library exit is locked, Eli goes to the librarian and asks how to open the door. She is lost in thought, searching for the answer to the question: &quot;What leads to a happy life?&quot; Eli interrupts her thoughts, and she realizes she doesn&#x27;t know where the key to the door is. While she&#x27;s searching, she asks Eli to bring her a book. After Eli brings her two books, she still hasn&#x27;t found an answer to her question, until Eli says: &quot;What does your heart tell you?&quot; The librarian then says: &quot;That&#x27;s a good question. I&#x27;ll think about it,&quot; and gives Eli the key to the door. Now Eli can leave the library and go to the first confirmation class.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This clearly demonstrates that the gift of knowledge is not just an intellectual ability but also has an emotional and spiritual dimension. The gift of knowledge helps us better understand the world around us and make the right decisions. It is a gift of the Holy Spirit that helps us recognize and live the truth.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-creation-of-the-game&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-creation-of-the-game&quot; aria-label=&quot;Anchor link for: the-creation-of-the-game&quot;&gt;The Creation of the Game&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;First, I create the graphics I need for the game. I found most assets on &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;&quot;&gt;itch.io&lt;&#x2F;a&gt; and created the appropriate backgrounds with LDtk. I made changes easily with &lt;a href=&quot;https:&#x2F;&#x2F;www.gimp.org&#x2F;&quot;&gt;Gimp&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;studio.polotno.com&#x2F;&quot;&gt;Polotno Studio&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;style&gt;
   .containerimg img {
        width: 200px;
       min-height: 200px;
        margin: 0 10px;
    }
&lt;&#x2F;style&gt;
&lt;div class=&quot;containerimg&quot; style=&quot;
    text-align: center;
    display: flex;
    overflow: scroll;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;tiles00001.png&quot; alt=&quot;Tile image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;tiles00002.png&quot; alt=&quot;Tile image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;tiles00005.png&quot; alt=&quot;Tile image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;tiles00006.png&quot; alt=&quot;Tile image&quot;&gt;
&lt;&#x2F;div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Within GB Studio, I then create the individual levels and logic. This is quite simple, and there are many tutorials online to help you understand the tool. I watched a few tutorials and then just got started. Here are some images for better understanding, but you get the hang of it quickly and it&#x27;s really fun.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;style&gt;
   .containerimg img {
        width: 200px;
       min-height: 200px;
        margin: 0 10px;
    }
  .containerimg  .full {
        width: 95%;
        height: auto;
        margin: 0 10px;
    }
&lt;&#x2F;style&gt;
&lt;div  class=&quot;containerimg&quot; style=&quot;
    text-align: center;
    display: flex;
    overflow: scroll;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;&quot;&gt;
&lt;img class=&quot;full&quot; src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;screen00001.png&quot; alt=&quot;Screen image&quot;&gt;
&lt;img  class=&quot;full&quot; src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;screen00002.png&quot; alt=&quot;Screen image&quot;&gt;
&lt;img  class=&quot;full&quot; src=&quot;&#x2F;posts&#x2F;gameboy-games-for-education-and-pastoral-work&#x2F;images&#x2F;screen00003.png&quot; alt=&quot;Screen image&quot;&gt;
&lt;&#x2F;div&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;After that, I export the game as a .gb ROM and upload it to my server. The app then downloads the game, and the youth can play it directly in the app. Through a small JavaScript script within the app, the app recognizes when the game is finished and then stores a badge in the app. Here&#x27;s the snippet. It conveniently reads the emulator&#x27;s video buffer and recognizes by a color code whether the game has been completed. This method isn&#x27;t perfect, but it works.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setInterval&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;( emulator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;video&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;buffer[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;248 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;emulator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;video&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;buffer[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;emulator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;video&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;buffer[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;248 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;emulator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;video&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;buffer[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;emulator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;video&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;buffer[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;248 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;emulator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;video&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;buffer[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;addBadge&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Game &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;localStorage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;getItem&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;romname&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;          window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;location&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;href &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;index.html&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;      }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;gamification-in-education-and-pastoral-work&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#gamification-in-education-and-pastoral-work&quot; aria-label=&quot;Anchor link for: gamification-in-education-and-pastoral-work&quot;&gt;Gamification in Education and Pastoral Work&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Gamification offers valuable opportunities to increase learner motivation and make complex content more accessible. In the context of pastoral work, game elements can make spiritual topics more tangible.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;benefits-of-gameboy-games&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#benefits-of-gameboy-games&quot; aria-label=&quot;Anchor link for: benefits-of-gameboy-games&quot;&gt;Benefits of Gameboy Games&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Easy Access&lt;&#x2F;strong&gt;: Simple game mechanics&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Focus on Content&lt;&#x2F;strong&gt;: Reduced graphics don&#x27;t distract from the educational content&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Universal Availability&lt;&#x2F;strong&gt;: HTML5 export and ROM export allow use on various devices, even cheap handhelds like the R36S can be used.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;learning-effects-through-gamification&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#learning-effects-through-gamification&quot; aria-label=&quot;Anchor link for: learning-effects-through-gamification&quot;&gt;Learning Effects Through Gamification&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;More active engagement instead of passive information reception&lt;&#x2F;li&gt;
&lt;li&gt;Emotional connection through characters and stories&lt;&#x2F;li&gt;
&lt;li&gt;Immediate feedback on learning progress&lt;&#x2F;li&gt;
&lt;li&gt;Self-directed learning at your own pace&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;integration-into-confirmation-preparation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#integration-into-confirmation-preparation&quot; aria-label=&quot;Anchor link for: integration-into-confirmation-preparation&quot;&gt;Integration into Confirmation Preparation&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The Gameboy games centered around Eli illustrate the gifts of the Holy Spirit and serve as conversation starters. The connection with badges in the app creates additional motivation for young people.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;challenges&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#challenges&quot; aria-label=&quot;Anchor link for: challenges&quot;&gt;Challenges&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;During development, it was important to find a balance between entertainment and educational content. The technical integration and age-appropriate design required creative solutions. Translating theological concepts into game mechanics needed special care.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;further-applications&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#further-applications&quot; aria-label=&quot;Anchor link for: further-applications&quot;&gt;Further Applications&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The concept can be applied to other areas such as Bible stories, church history, or ethical issues.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;Conclusion&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The use of Gameboy games in educational and pastoral work has proven to be an effective method for emotionally engaging young people and making complex theological topics experiential. GB Studio enables even technically less proficient individuals to develop their own educational games. The positive feedback confirms that this innovative approach enriches confirmation preparation and promotes the intrinsic motivation of young people. The combination of nostalgic game aesthetics and modern pedagogical concepts creates new paths for contemporary religious education.&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/gameboy-games-for-education-and-pastoral-work/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/gameboy-games-for-education-and-pastoral-work/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> Gamification in education and pastoral work: How using Gameboy games in education and pastoral work can increase intrinsic motivation. Insights into the use of Gameboy games in education and pastoral work. With tutorial for creating Gameboy games using GB Studio. </info>
        </item>
        <item>
            <title>Paperless Work with Obsidian, EPUBs and E-Book Readers</title>
            <pubDate>Mon, 31 Mar 2025 22:59:00 +0100</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/work-paperlesse-with-obsidian-epub-and-ebookreader/</link>
            <guid>https://simeon.staneks.de/en/posts/work-paperlesse-with-obsidian-epub-and-ebookreader/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/work-paperlesse-with-obsidian-epub-and-ebookreader/">&lt;h1 id=&quot;the-genesis-paperless-work-in-pastoral-care&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-genesis-paperless-work-in-pastoral-care&quot; aria-label=&quot;Anchor link for: the-genesis-paperless-work-in-pastoral-care&quot;&gt;The Genesis: Paperless Work in Pastoral Care&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;When it comes to note-taking tools, you can dive deep and resurface years later still searching for the perfect solution for your own workflow. I have tried many tools over the last few years to organize my notes and thoughts. I keep returning to &lt;a href=&quot;https:&#x2F;&#x2F;obsidian.md&quot;&gt;Obsidian&lt;&#x2F;a&gt; because it offers me the greatest freedom to organize and structure my notes, not to mention the number of plugins it offers. I have established Obsidian as my main note-taking tool to record my thoughts and ideas. I use it for everything I do: from planning projects to documenting ideas to creating church services and sermons. Actually, I am completely happy with the tool, but somehow I have considered it a transitional solution for years, and I believe I am not alone in this.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;advantages-of-using-obsidian&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#advantages-of-using-obsidian&quot; aria-label=&quot;Anchor link for: advantages-of-using-obsidian&quot;&gt;Advantages of Using Obsidian&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Nevertheless, there are several advantages that I appreciate about Obsidian:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Easy Access&lt;&#x2F;strong&gt;: Through the simple user interface, I can quickly and easily organize and manage my notes.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Markdown&lt;&#x2F;strong&gt;: I can write my notes in Markdown, which gives me the freedom to export them in various formats.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Plugins&lt;&#x2F;strong&gt;: I can use many plugins to enhance and manage my notes. Of course, I can also program plugins for it myself, which makes the tool even more flexible.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Offline Access&lt;&#x2F;strong&gt;: While I synchronize my notes with Nextcloud, I can also use them offline, which gives me the freedom to work anywhere.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful&lt;&#x2F;strong&gt;: I can customize my notes with various themes and CSS to make them more beautiful. And I love the flexoki theme. It just looks fantastic.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;practical-workflow-an-example&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#practical-workflow-an-example&quot; aria-label=&quot;Anchor link for: practical-workflow-an-example&quot;&gt;Practical Workflow: An Example&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;the-church-service&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-church-service&quot; aria-label=&quot;Anchor link for: the-church-service&quot;&gt;The Church Service&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;In my case, I plan and write my church services and sermons in Obsidian. I have a template for this that I use repeatedly. Because a church service usually consists of the same elements: opening, sign of the cross, welcome, kyrie, prayer of the day, reading, gospel, sermon, intercessions, Our Father, closing prayer, and blessing. I created a template that I can use repeatedly. The template looks like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-markdown &quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;# &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Word Service on {{date:DD.MM.YYYY}}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;![[Silence.mp3]]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Opening
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;![[{{location}}Music.mp3]]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Sign of the Cross
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;In the name of the Father and of the Son and of the Holy Spirit. Amen. +
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Welcome
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Dear sisters and brothers, I welcome you all warmly to our word service today {{location}}.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Insert individual welcome and thematic introduction here --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Kyrie
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Lord Jesus Christ, you have come to show us the way to the Father. Lord, have mercy on us. You have proclaimed the good news to us and invited us to the kingdom of God. Christ, have mercy on us. You lead us and accompany us into eternal life. Lord, have mercy on us.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;![[Music1.mp3]]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Prayer of the Day
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Insert prayer of the day according to the liturgical day --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Reading
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Insert reading according to the liturgical day --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;![[Music2.mp3]]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Christ Victor... &#x2F; Hallelujah...
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Depending on the season --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Gospel
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Insert gospel according to the liturgical day --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Sermon
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Insert sermon - Structure: --&amp;gt; &amp;lt;!-- - Reference to the gospel --&amp;gt; &amp;lt;!-- - Develop main theme --&amp;gt; &amp;lt;!-- - Establish life reference --&amp;gt; &amp;lt;!-- - Formulate hopeful conclusion --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;![[Music3.mp3]]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Intercessions
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Good God, trusting in your love, we bring our requests before you:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;1. &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Intercession 1 --&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#f07171;&quot;&gt;_We ask you, hear us._
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;2. &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Intercession 2 --&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#f07171;&quot;&gt;_We ask you, hear us._
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;3. &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Intercession 3 --&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#f07171;&quot;&gt;_We ask you, hear us._
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;4. &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Intercession 4 --&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#f07171;&quot;&gt;_We ask you, hear us._
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;5. &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Intercession 5 --&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#f07171;&quot;&gt;_We ask you, hear us._
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;6. &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Intercession 6 --&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#f07171;&quot;&gt;_We ask you, hear us._
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;God, our Father, you hear our requests. We trust that you are close to us and accompany us with your love. We ask this through Christ, our Lord. Amen.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Our Father
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Closing Prayer
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Insert appropriate closing prayer --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Blessing
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;May the God of light and life bless you with the light of his presence, which dispels the night and illuminates the darkness.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;May the Creator of all things fill your heart with the vastness of the sky and the firmness of the ground beneath your feet.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Adapt third part of the blessing according to the theme --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;And so may Almighty God bless you, the Father, the Son, and the Holy Spirit. Amen.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#fa6e32;&quot;&gt;## &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#399ee6;&quot;&gt;Closing Song
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;![[ClosingSong.mp3]]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Most people probably don&#x27;t use Obsidian for church service preparation, but I actually find that it&#x27;s a very good use case for Obsidian.&lt;&#x2F;p&gt;
&lt;p&gt;Once the church service is created, you would normally print it out and take it with you. But I thought I could do this differently too. I bought an e-book reader to keep my church services and sermons paperless. I just wanted to try out how it would be. And I have to say, it&#x27;s really a great thing. I can read my church services and sermons on the e-book reader and don&#x27;t have to print them out anymore. This saves paper and is much more practical. And if you&#x27;ve been paying attention, you&#x27;ll also find links to the music files that I include in the church service in the template. This is really practical because I can play the music directly on the e-book reader and don&#x27;t have to switch between different devices anymore. Thanks to the .epub format, I can insert the music files directly into the sequence. Another added value is, of course, the better readability on the e-book reader. I can adjust the font size, contrast, and brightness individually. I can read my texts even in complete darkness. This is really great.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-export&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-export&quot; aria-label=&quot;Anchor link for: the-export&quot;&gt;The Export&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Unfortunately, there was no plugin for Obsidian for this, so I wrote my own 3 years ago: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimeonLukas&#x2F;obsidian-kindle-export&quot;&gt;obsidian-kindle-export&lt;&#x2F;a&gt;. At that time, I still owned a Kindle, hence the name. The plugin exports the Markdown files to an .epub format, which is then sent by email to the Kindle. The plugin can simply be searched for in the community plugins and installed. The plugin is very easy to use, and I can recommend it to anyone who wants to read their notes on their e-book reader. In the settings, you simply enter the necessary data, and the plugin does the work. You can start the conversion with the command &lt;code&gt;Kindle: Export&lt;&#x2F;code&gt;. I&#x27;ve mapped the command to the keys &lt;code&gt;cmd+0&lt;&#x2F;code&gt; so it can be executed quickly and easily.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;work-paperlesse-with-obsidian-epub-and-ebookreader&#x2F;images&#x2F;screenrecord.gif&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately, it is not possible to send an email from within Obsidian, so there is another program that takes over this function. &lt;a href=&quot;https:&#x2F;&#x2F;md2epub.staneks.de&#x2F;&quot;&gt;Md2epub&lt;&#x2F;a&gt; is a server written in PHP that receives the files from Obsidian and then sends them. My hosted version can certainly be used, but I recommend running the program yourself. For this, there is a Docker container that can be found &lt;a href=&quot;https:&#x2F;&#x2F;hub.docker.com&#x2F;r&#x2F;simeonstanek&#x2F;md2epub&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;By the way, the following image shows an EPUB I created, though the cover has changed since then.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;work-paperlesse-with-obsidian-epub-and-ebookreader&#x2F;images&#x2F;ebook.jpg&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hardware&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#hardware&quot; aria-label=&quot;Anchor link for: hardware&quot;&gt;Hardware&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;I&#x27;ve been using the Pocketbook Era for two years now, which supports playing audio files within the .epub format, and I can also connect any Bluetooth speaker to it. In my case, the Teufelbox Rockster Cross. I&#x27;m completely satisfied with that. The Pocketbook is a very good e-book reader, and I can recommend it to anyone looking for an e-book reader. It is certainly slower than a Kindle, but the added value with audio playback convinced me.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion-the-digital-transformation-of-pastoral-work&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion-the-digital-transformation-of-pastoral-work&quot; aria-label=&quot;Anchor link for: conclusion-the-digital-transformation-of-pastoral-work&quot;&gt;Conclusion: The Digital Transformation of Pastoral Work&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;What began as a search for the optimal note-taking tool has developed into a comprehensive digital workflow for pastoral work. Obsidian has proven to be an ideal platform, convincing through its flexibility, Markdown support, and extensibility. The combination with an e-book reader like the Pocketbook Era creates a consistently digital solution that is not only paperless but also opens up new possibilities.
The integration of audio files directly into the church service sequence, the improved readability through individually adjustable font, and the ability to work in any lighting situation are tangible advantages over conventional paper, even if one likes the haptics (especially in church 😇). Through self-developed tools like the obsidian-kindle-export plugin, this bridge between preparation and execution is seamlessly built.
Ultimately, it&#x27;s not just about digitization for its own sake. It&#x27;s about making pastoral work more efficient, flexible, and sustainable. The time that was previously spent on printing, sorting, and transporting paper can now be used for content work. And while some may hesitate to switch to digital solutions, this workflow shows that technology and spirituality are not mutually exclusive but can complement each other beneficially.&lt;&#x2F;p&gt;
&lt;p&gt;Amen😘&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/work-paperlesse-with-obsidian-epub-and-ebookreader/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/work-paperlesse-with-obsidian-epub-and-ebookreader/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> Insights into my paperless workflow with Obsidian, EPUBs and e-book readers. Tips on using Obsidian for notes and creating EPUBs from Markdown files. Introduction to my use of EPUBs and e-book readers for paperless work. </info>
        </item>
        <item>
            <title>Automatic Cover Image Generation for Zola Blogs with Bun, TypeScript and Polotno</title>
            <pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/image-generation-for-zola-with-polotno/</link>
            <guid>https://simeon.staneks.de/en/posts/image-generation-for-zola-with-polotno/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/image-generation-for-zola-with-polotno/">&lt;h1 id=&quot;the-genesis-why-generate-images-automatically&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-genesis-why-generate-images-automatically&quot; aria-label=&quot;Anchor link for: the-genesis-why-generate-images-automatically&quot;&gt;The Genesis: Why Generate Images Automatically?&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;I love podcasts and listen to them a lot, which is why I have &lt;a href=&quot;https:&#x2F;&#x2F;antennapod.org&#x2F;&quot;&gt;Antennapod&lt;&#x2F;a&gt; installed on my Android phone. It&#x27;s my favorite podcatcher, which occasionally doubles as a feed reader. I noticed that simple RSS feeds lack cover images, and I wanted to change that for my feed, plus I needed preview images for social media anyway. Every blog post needs an attractive title image to grab attention on social media, RSS feeds, and the website itself. However, manually creating individual images for each article is time-consuming and requires significant effort.&lt;&#x2F;p&gt;
&lt;p&gt;I decided to automate this process: A script that automatically generates various images for different platforms from my blog post metadata - with consistent design but individual elements based on each article&#x27;s content.&lt;&#x2F;p&gt;
&lt;div style=&quot;
    text-align: center;
    display: flex;
    overflow: scroll;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;20241120&#x2F;&#x2F;images&#x2F;de&#x2F;feed.jpg&quot; alt=&quot;RSS Feed Image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;20241120&#x2F;&#x2F;images&#x2F;en&#x2F;feed.jpg&quot; alt=&quot;RSS Feed Image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;20241120&#x2F;&#x2F;images&#x2F;de&#x2F;instagram1.jpg&quot; alt=&quot;Instagram Image 1&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;20241120&#x2F;&#x2F;images&#x2F;de&#x2F;instagram2.jpg&quot; alt=&quot;Instagram Image 2&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;20241120&#x2F;&#x2F;images&#x2F;en&#x2F;instagram1.jpg&quot; alt=&quot;Instagram Image 1&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;20241120&#x2F;&#x2F;images&#x2F;en&#x2F;instagram2.jpg&quot; alt=&quot;Instagram Image 2&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;20241120&#x2F;&#x2F;images&#x2F;de&#x2F;preview.jpg&quot; alt=&quot;OG Image&quot;&gt;
&lt;img src=&quot;&#x2F;posts&#x2F;20241120&#x2F;&#x2F;images&#x2F;en&#x2F;preview.jpg&quot; alt=&quot;OG Image&quot;&gt;
&lt;&#x2F;div&gt;
&lt;h1 id=&quot;the-technology-zola-bun-typescript-and-polotno&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-technology-zola-bun-typescript-and-polotno&quot; aria-label=&quot;Anchor link for: the-technology-zola-bun-typescript-and-polotno&quot;&gt;The Technology: Zola, Bun, TypeScript, and Polotno&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;technical-solution-overview&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#technical-solution-overview&quot; aria-label=&quot;Anchor link for: technical-solution-overview&quot;&gt;Technical Solution Overview&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;My solution uses the following technologies:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Zola&lt;&#x2F;strong&gt; as static site generator for the blog and RSS feed server&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Bun&lt;&#x2F;strong&gt; as JavaScript runtime (faster than Node.js)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;TypeScript&lt;&#x2F;strong&gt; for programming logic&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Polotno&lt;&#x2F;strong&gt; for programmatic image generation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;RSS feeds&lt;&#x2F;strong&gt; as data source for post information&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The system generates four different image formats for each blog post:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;An OG image for social media previews&lt;&#x2F;li&gt;
&lt;li&gt;An Instagram format 1&lt;&#x2F;li&gt;
&lt;li&gt;An Instagram format 2&lt;&#x2F;li&gt;
&lt;li&gt;A feed image for RSS readers&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Additionally, all images are automatically created for different language versions of the blog.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-deployment-script&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-deployment-script&quot; aria-label=&quot;Anchor link for: the-deployment-script&quot;&gt;The Deployment Script&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Here&#x27;s the bash script that starts the entire process:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#!&#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Blog publishing script
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;Users&#x2F;simeonstanek&#x2F;Apps&#x2F;BLOG-Homepage&#x2F;simeonsblog&#x2F;scripts
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# start the server
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zola&lt;&#x2F;span&gt;&lt;span&gt; serve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --port&lt;&#x2F;span&gt;&lt;span&gt; 1234 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;span&gt; 5
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# run the generator
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bun&lt;&#x2F;span&gt;&lt;span&gt; run index.ts
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# stop the server
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;kill &lt;&#x2F;span&gt;&lt;span&gt;$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lsof&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -t -i&lt;&#x2F;span&gt;&lt;span&gt;:1234)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# commit all changes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;Users&#x2F;simeonstanek&#x2F;Apps&#x2F;BLOG-Homepage&#x2F;simeonsblog
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; pull
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; add &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; commit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;update content on $&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; push
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This script performs the following steps:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Changes to the scripts directory&lt;&#x2F;li&gt;
&lt;li&gt;Starts the Zola server in the background (for RSS feed)&lt;&#x2F;li&gt;
&lt;li&gt;Waits 5 seconds for the server to fully start&lt;&#x2F;li&gt;
&lt;li&gt;Runs the TypeScript script with Bun&lt;&#x2F;li&gt;
&lt;li&gt;Stops the Zola server&lt;&#x2F;li&gt;
&lt;li&gt;Commits changes and pushes to Git repository&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;the-image-generator-under-the-hood&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-image-generator-under-the-hood&quot; aria-label=&quot;Anchor link for: the-image-generator-under-the-hood&quot;&gt;The Image Generator: Under the Hood&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Now let&#x27;s look at the core of the solution - the TypeScript script that does the actual work:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;typescript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-typescript &quot;&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ hash } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;bun&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;fs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;fs&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;{ DOMParser } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;xmldom&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;{ createInstance } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;polotno-node&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Main function controlling the entire process
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;async function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;titles &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;dates &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;urls &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;languages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;de&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Fetch and process RSS feed
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fetch&lt;&#x2F;span&gt;&lt;span&gt;(lang)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;then&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;response&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;response&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;then&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;parser &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;DOMParser&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;xml &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;parser&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;parseFromString&lt;&#x2F;span&gt;&lt;span&gt;(str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;text&#x2F;xml&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;items &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;xml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;getElementsByTagName&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;item&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            languages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;xml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;getElementsByTagName&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;language&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;childNodes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;nodeValue&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Extract information from RSS feed
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;items&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                titles&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;push&lt;&#x2F;span&gt;&lt;span&gt;(items[o]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;getElementsByTagName&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;childNodes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;nodeValue)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;date &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Date&lt;&#x2F;span&gt;&lt;span&gt;(items[o]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;getElementsByTagName&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pubDate&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;childNodes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;nodeValue)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;options &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;{ year&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;numeric&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;month&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;long&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;day&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;numeric&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;formattedDate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;toLocaleDateString&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;de-DE&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;options)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                dates&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;push&lt;&#x2F;span&gt;&lt;span&gt;(formattedDate)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;items[o]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;getElementsByTagName&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;link&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;childNodes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;nodeValue&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;url&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;url[url&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;url[url&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                urls&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;push&lt;&#x2F;span&gt;&lt;span&gt;(url)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;description &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;items[o]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;getElementsByTagName&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;description&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;childNodes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;nodeValue&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(description&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                    description &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;description&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;substring&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;...&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                }
&lt;&#x2F;span&gt;&lt;span&gt;                description &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;description&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;replace&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;&#x2F;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;&amp;gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;gm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;push&lt;&#x2F;span&gt;&lt;span&gt;(description)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Adjust templates and generate images
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;titles&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;k&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;template &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#ed9366;&quot;&gt;JSON&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parse&lt;&#x2F;span&gt;&lt;span&gt;(fs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;readFileSync&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;data&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;utf8&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;pages&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                    template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;pages[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;background &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;linear-gradient(228deg,white 0%,&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getRGB&lt;&#x2F;span&gt;&lt;span&gt;(titles[k]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; 100%)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;pages[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;children&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;pages[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;children[j]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                            template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;pages[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;children[j]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;text &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;titles[k]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                        }
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;pages[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;children[j]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;date&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                            template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;pages[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;children[j]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;text &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Simeon Stanek :: &amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;dates[k]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                        }
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;pages[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;children[j]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;hintergrundtext&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                            template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;pages[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;children[j]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;text &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;content[k]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                        }
&lt;&#x2F;span&gt;&lt;span&gt;                    }
&lt;&#x2F;span&gt;&lt;span&gt;                }
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exporter&lt;&#x2F;span&gt;&lt;span&gt;(template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;k&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;urls[k]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;languages)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        })&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Function for image generation and storage
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;async function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exporter&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;url&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;languages&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        fs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mkdirSync&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;content&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;images&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;languages&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;{ recursive&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true &lt;&#x2F;span&gt;&lt;span&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ogimage.json&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; !&lt;&#x2F;span&gt;&lt;span&gt;fs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;existsSync&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;content&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;images&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;languages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;preview.jpg&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;instance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;createInstance&lt;&#x2F;span&gt;&lt;span&gt;({ key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[your-api-key]&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;pdfBase64 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;jsonToImageBase64&lt;&#x2F;span&gt;&lt;span&gt;(template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;{ mimeType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;image&#x2F;jpeg&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            fs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;writeFileSync&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;content&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;images&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;languages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;preview.jpg&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;pdfBase64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;base64&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;instagram1.json&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; !&lt;&#x2F;span&gt;&lt;span&gt;fs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;existsSync&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;content&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;images&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;languages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;instagram1.jpg&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;instance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;createInstance&lt;&#x2F;span&gt;&lt;span&gt;({ key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[your-api-key]&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;pdfBase64 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;jsonToImageBase64&lt;&#x2F;span&gt;&lt;span&gt;(template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;{ mimeType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;image&#x2F;jpeg&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            fs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;writeFileSync&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;content&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;images&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;languages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;instagram1.jpg&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;pdfBase64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;base64&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;instagram2.json&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; !&lt;&#x2F;span&gt;&lt;span&gt;fs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;existsSync&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;content&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;images&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;languages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;instagram2.jpg&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;instance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;createInstance&lt;&#x2F;span&gt;&lt;span&gt;({ key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[your-api-key]&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;pdfBase64 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;jsonToImageBase64&lt;&#x2F;span&gt;&lt;span&gt;(template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;{ mimeType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;image&#x2F;jpeg&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            fs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;writeFileSync&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;content&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;images&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;languages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;instagram2.jpg&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;pdfBase64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;base64&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;feed.json&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; !&lt;&#x2F;span&gt;&lt;span&gt;fs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;existsSync&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;content&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;images&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;languages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;feed.jpg&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;instance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;createInstance&lt;&#x2F;span&gt;&lt;span&gt;({ key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[your-api-key]&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;pdfBase64 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;jsonToImageBase64&lt;&#x2F;span&gt;&lt;span&gt;(template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;{ mimeType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;image&#x2F;jpeg&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            fs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;writeFileSync&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;content&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;images&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;languages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;feed.jpg&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;pdfBase64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;base64&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Function to generate RGB color from string
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getRGB&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;hashed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hash&lt;&#x2F;span&gt;&lt;span&gt;(str)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;hashed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;toString&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;substring&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Main function for image generation
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;async function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generate&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ogimage.json&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;rss.xml&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setTimeout&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;instagram1.json&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;rss.xml&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setTimeout&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;instagram2.json&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;rss.xml&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setTimeout&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;feed.json&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;rss.xml&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setTimeout&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ogimage.json&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;en&#x2F;rss.xml&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setTimeout&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;instagram1.json&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;en&#x2F;rss.xml&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setTimeout&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;instagram2.json&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;en&#x2F;rss.xml&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setTimeout&lt;&#x2F;span&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;feed.json&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;en&#x2F;rss.xml&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generate&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;the-process-in-detail&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-process-in-detail&quot; aria-label=&quot;Anchor link for: the-process-in-detail&quot;&gt;The Process in Detail&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-reading-data-from-rss-feed&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#1-reading-data-from-rss-feed&quot; aria-label=&quot;Anchor link for: 1-reading-data-from-rss-feed&quot;&gt;1. Reading Data from RSS Feed&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The script starts by fetching the blog&#x27;s RSS feed and extracting relevant information:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Post titles&lt;&#x2F;li&gt;
&lt;li&gt;Publication dates (formatted)&lt;&#x2F;li&gt;
&lt;li&gt;Post URLs&lt;&#x2F;li&gt;
&lt;li&gt;Brief descriptions (truncated to 500 characters)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The feed is parsed as XML and data is stored in arrays.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-individual-color-scheme-per-article&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#2-individual-color-scheme-per-article&quot; aria-label=&quot;Anchor link for: 2-individual-color-scheme-per-article&quot;&gt;2. Individual Color Scheme per Article&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;A clever feature of the script is automatic color generation for each article:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;typescript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-typescript &quot;&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getRGB&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;hashed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hash&lt;&#x2F;span&gt;&lt;span&gt;(str)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;hashed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;toString&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;substring&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This function generates a hash value from the article title and converts it to a HEX color code. This gives each article a unique but consistent color scheme that remains the same with each run.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-template-customization-for-each-article&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#3-template-customization-for-each-article&quot; aria-label=&quot;Anchor link for: 3-template-customization-for-each-article&quot;&gt;3. Template Customization for Each Article&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;For each image type (OG image, Instagram, Feed), there&#x27;s a JSON template in the &quot;data&quot; directory. These templates are dynamically adjusted for each article. I created the templates using &lt;a href=&quot;https:&#x2F;&#x2F;studio.polotno.com&#x2F;&quot;&gt;Polotno Studio&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The background gets an individual color gradient&lt;&#x2F;li&gt;
&lt;li&gt;The title is inserted&lt;&#x2F;li&gt;
&lt;li&gt;The date with author name is added&lt;&#x2F;li&gt;
&lt;li&gt;A content excerpt is used as background text
Make sure the layers in your JSON templates match the names referenced in the TypeScript script.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;image-generation-for-zola-with-polotno&#x2F;images&#x2F;polotno00001.png&quot; alt=&quot;Polotno Studio&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;4-image-generation-with-polotno&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#4-image-generation-with-polotno&quot; aria-label=&quot;Anchor link for: 4-image-generation-with-polotno&quot;&gt;4. Image Generation with Polotno&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The customized templates are converted to JPEG images using Polotno:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;typescript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-typescript &quot;&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;instance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;createInstance&lt;&#x2F;span&gt;&lt;span&gt;({
&lt;&#x2F;span&gt;&lt;span&gt;  key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[your-api-key]&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;pdfBase64 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;instance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;jsonToImageBase64&lt;&#x2F;span&gt;&lt;span&gt;(template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  mimeType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;image&#x2F;jpeg&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-storing-images-in-blog-structure&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#5-storing-images-in-blog-structure&quot; aria-label=&quot;Anchor link for: 5-storing-images-in-blog-structure&quot;&gt;5. Storing Images in Blog Structure&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The generated images are stored in a structured directory tree:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;content&#x2F;[article-name]&#x2F;images&#x2F;[language]&#x2F;[image-type].jpg
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;6-multilingual-support&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#6-multilingual-support&quot; aria-label=&quot;Anchor link for: 6-multilingual-support&quot;&gt;6. Multilingual Support&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The script automatically generates images for all language versions of the blog (in this example, German and English).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zola-configuration-for-image-usage&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#zola-configuration-for-image-usage&quot; aria-label=&quot;Anchor link for: zola-configuration-for-image-usage&quot;&gt;Zola Configuration for Image Usage&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;For Zola to properly use the generated images, here&#x27;s an example of the corresponding template configuration:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;    {% if page.path %}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;property&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;og:image&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;{{config.base_url | safe}}{{ page.path | safe }}&#x2F;images&#x2F;{{lang}}&#x2F;preview.jpg&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;property&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;og:logo&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;{{config.base_url | safe}}{{ page.path | safe }}&#x2F;images{{lang}}&#x2F;preview.jpg&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- twitter card --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;twitter:card&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;summary_large_image&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;twitter:image&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;{{config.base_url | safe}}{{ page.path | safe }}images&#x2F;{{lang}}&#x2F;preview.jpg&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    {% elif config.extra.favicon %}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;property&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;og:image&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;{{ config.extra.favicon }}&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    {% endif %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;the-benefits-of-automation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-benefits-of-automation&quot; aria-label=&quot;Anchor link for: the-benefits-of-automation&quot;&gt;The Benefits of Automation&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;This solution offers several advantages:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Consistent Design&lt;&#x2F;strong&gt;: All images follow the same design scheme, strengthening brand identity (if I had one).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Individual Touch&lt;&#x2F;strong&gt;: Each article still gets its own color scheme and content as visual elements.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Time Savings&lt;&#x2F;strong&gt;: Image generation happens before article publication by simply running the deployment script.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Multilingual Support&lt;&#x2F;strong&gt;: All language versions are supported without additional effort.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Complete Integration&lt;&#x2F;strong&gt;: Through Git integration, all changes are published immediately.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;Conclusion&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;With this combination of Zola, Bun, TypeScript, and Polotno, I&#x27;ve found an elegant solution to improve my blog workflow. The automatic image generation ensures that each article is visually appealing without requiring additional effort.&lt;&#x2F;p&gt;
&lt;p&gt;The solution is flexible and can be easily adapted to other requirements - whether by changing templates, adding more image formats, or adjusting visual elements.&lt;&#x2F;p&gt;
&lt;p&gt;If you want to use this approach for your own blog, make sure to get your own Polotno API key and adjust the templates to your own design.&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/image-generation-for-zola-with-polotno/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/image-generation-for-zola-with-polotno/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> A script that automatically generates various images for different platforms from blog post metadata - with consistent design but individual elements based on each article&#x27;s content. </info>
        </item>
        <item>
            <title>Bible Studies with Bible Crawler, Obsidian and Bible Linker</title>
            <pubDate>Wed, 29 Jan 2025 00:00:00 +0000</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/bible-crawler-obsidian-and-bible-linker/</link>
            <guid>https://simeon.staneks.de/en/posts/bible-crawler-obsidian-and-bible-linker/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/bible-crawler-obsidian-and-bible-linker/">&lt;h1 id=&quot;genesis&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#genesis&quot; aria-label=&quot;Anchor link for: genesis&quot;&gt;Genesis&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;About three years ago, I wanted to digitize my Bible studies. I wanted to be able to read and compare the Bible in different versions, but unfortunately, it&#x27;s virtually impossible to obtain Bible texts in digital form in Germany. Most Bible versions are protected by copyright. Fortunately, there are many websites that offer Bible texts in digital form for reading. This gave me the idea to write a program that crawls the Bible texts from these websites and stores them in a format I could use. Since a few issues recently appeared on Github, I decided to improve and expand the program and, of course, write a blog post about it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bible-crawler&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#bible-crawler&quot; aria-label=&quot;Anchor link for: bible-crawler&quot;&gt;Bible Crawler&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;I published the small program on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimeonLukas&#x2F;Bible-Crawler-Rust&quot;&gt;Github&lt;&#x2F;a&gt; and there are 3 versions: one for Windows, one for Linux, and one for MacOS, so anyone who wants can download the Bible texts in markdown files. Since I had a great interest in the Rust programming language at the time, I wrote the program in Rust. Rust is a modern, performant, and safe programming language that is particularly suitable for system programming. The program is very simple and consists of only one file and the corresponding JSON files that contain the configuration for the Bible versions.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-does-the-bible-crawler-do&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-does-the-bible-crawler-do&quot; aria-label=&quot;Anchor link for: what-does-the-bible-crawler-do&quot;&gt;What does the Bible Crawler do?&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The Bible Crawler fetches the HTML from the websites of the various Bible versions (bibleserver.com and die-bibel.de) and extracts the Bible texts. The Bible texts are divided into chapters and verses and stored in a readable format for me. The Bible texts can then be read and edited in a text editor like Obsidian.
The following Bible versions are currently available in the latest version:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Translations&lt;&#x2F;span&gt;&lt;span&gt; from bibleserver.com:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1.&lt;&#x2F;span&gt;&lt;span&gt; Einheitsübersetzung (EU)    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2.&lt;&#x2F;span&gt;&lt;span&gt; Luther Bible (LUT)          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;3.&lt;&#x2F;span&gt;&lt;span&gt; Elberfelder Bible (ELB)     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;4.&lt;&#x2F;span&gt;&lt;span&gt; Hope for All (HFA)    
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;5.&lt;&#x2F;span&gt;&lt;span&gt; Schlachter Bible (SLT)      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;6.&lt;&#x2F;span&gt;&lt;span&gt; La Biblia Textual (BTX)     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;7.&lt;&#x2F;span&gt;&lt;span&gt; Good News Bible 2018 (GNB)   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;8.&lt;&#x2F;span&gt;&lt;span&gt; New Evangelistic Translation (NEUE &#x2F; NeÜ)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Translations&lt;&#x2F;span&gt;&lt;span&gt; from die-bibel.de:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;9.&lt;&#x2F;span&gt;&lt;span&gt; Base Bible (BB)             &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;10.&lt;&#x2F;span&gt;&lt;span&gt; Nestle-Aland 28 (NA28)     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;11.&lt;&#x2F;span&gt;&lt;span&gt; Biblia Hebraica Stuttgartensia (BHS)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;installation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#installation&quot; aria-label=&quot;Anchor link for: installation&quot;&gt;Installation&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;You simply need to download and run the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimeonLukas&#x2F;Bible-Crawler-Rust&#x2F;releases&#x2F;latest&quot;&gt;program&lt;&#x2F;a&gt;. There are no other dependencies. The program is very simple.&lt;&#x2F;p&gt;
&lt;p&gt;As a MacOS or Linux user, you only need to make the file executable with &lt;code&gt;chmod +x .&#x2F;biblecrawler&lt;&#x2F;code&gt; so you can run it using &lt;code&gt;.&#x2F;biblecrawler&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;For MacOS users, you must additionally allow the execution of unsigned programs in the security settings.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;usage&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#usage&quot; aria-label=&quot;Anchor link for: usage&quot;&gt;Usage&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The program is very easy to use.
After selecting the desired Bible version by number or abbreviation, in the latest version you can choose a naming convention.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Which&lt;&#x2F;span&gt;&lt;span&gt; naming convention should be used&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1.&lt;&#x2F;span&gt;&lt;span&gt; Uppercase abbreviations (GEN, EXO, LEV, NUM, DEU, etc.)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2.&lt;&#x2F;span&gt;&lt;span&gt; Mixed case abbreviations (Gen, Exo, Lev, Num, Deu, etc.)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;3.&lt;&#x2F;span&gt;&lt;span&gt; Typical German Protestant (1. Mose, 2. Mose, 3. Mose, 4. Mose, 5. Mose, etc.)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;4.&lt;&#x2F;span&gt;&lt;span&gt; Typical German Catholic (Genesis, Exodus, Levitikus, Numeri, Deuteronomium, etc.)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;5.&lt;&#x2F;span&gt;&lt;span&gt; English (Genesis, Exodus, Leviticus, Numbers, Deuteronomy, etc.)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;6.&lt;&#x2F;span&gt;&lt;span&gt; Latin (Genesis, Exodus, Leviticus, Numeri, Deuteronomium, etc.)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;video loop autoplay controls width=&quot;100%&quot;&gt;&lt;source src=&quot;images&#x2F;video.mp4&quot; type=&quot;video&#x2F;mp4&quot;&gt;&lt;&#x2F;video&gt;&lt;&#x2F;p&gt;
&lt;p&gt;After that, the Bible Crawler will download the Bible texts and save them in markdown files. The files are stored in a folder with the name of the selected Bible version, and the chapters are stored in individual files.
Consequently, the Bible is loaded twice, once with each book in a markdown file and once with each chapter in a markdown file.
The book can be found in the root directory of the Bible version, and the chapters are in a subdirectory with the name of the book.
The files or folders are named according to the selected naming convention, such as &lt;code&gt;1. Mose&lt;&#x2F;code&gt; or &lt;code&gt;Genesis&lt;&#x2F;code&gt;.
This is very practical for use in Obsidian, as you can link the Bible texts in Obsidian using the Bible-Linker plugin and only need to remember one naming convention.&lt;&#x2F;p&gt;
&lt;p&gt;Thanks to the new update of the Bible Crawler, the Einheitsübersetzung can be downloaded in under a minute depending on your device.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, you can also use and process the files in other programs, but I mainly use them in Obsidian, and the following section shows how to use them effectively in Obsidian.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;obsidian&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#obsidian&quot; aria-label=&quot;Anchor link for: obsidian&quot;&gt;Obsidian&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The downloaded Bible texts must then be imported into the Obsidian vault. It&#x27;s best to place the Bible texts in a folder named &lt;code&gt;Bible&lt;&#x2F;code&gt; in the root directory of the vault.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;bible-crawler-obsidian-and-bible-linker&#x2F;images&#x2F;crawler00001.png&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bible-linker&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#bible-linker&quot; aria-label=&quot;Anchor link for: bible-linker&quot;&gt;Bible Linker&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;After installing the Bible Linker plugin from the Community Plugins, the fun can begin. A few settings need to be configured:&lt;&#x2F;p&gt;
&lt;p&gt;Verse offset: -1&lt;br &#x2F;&gt;
Enable multiple translations: true&lt;br &#x2F;&gt;
Paths to translations with their names: Bible&#x2F;NeÜ, Bible&#x2F;BB, Bible&#x2F;NA28, Bible&#x2F;BHS, Bible&#x2F;EU, Bible&#x2F;LUT, Bible&#x2F;ELB, Bible&#x2F;HFA, Bible&#x2F;SLT, Bible&#x2F;BTX, Bible&#x2F;GNB&lt;&#x2F;p&gt;
&lt;p&gt;Now you can simply link Bible verses in the desired version while writing in Obsidian. The plugin recognizes the Bible verses and links them automatically.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;bible-crawler-obsidian-and-bible-linker&#x2F;images&#x2F;crawler00003.png&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;bible-crawler-obsidian-and-bible-linker&#x2F;images&#x2F;crawler00002.jpg&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;Conclusion&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;After continuous development and use, I&#x27;m very satisfied with my Bible Crawler. What began as a personal solution for my digital Bible study has become a useful tool that helps others access Bible texts digitally. The combination of the Crawler and Obsidian enables exactly what I originally wanted: to easily read, compare, and incorporate different Bible translations into my studies.
I&#x27;m particularly pleased that the downloading is now so fast due to the performance improvements, and the support for different naming conventions makes usage even more flexible. The project shows me how a personal challenge can develop into a practical solution that also provides value for others.&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/bible-crawler-obsidian-and-bible-linker/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/bible-crawler-obsidian-and-bible-linker/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> A program I wrote that downloads different Bible versions which can then be used in Obsidian. You can also use and work with the Bible versions as markdown files and convert them to other documents. </info>
        </item>
        <item>
            <title>Zola: The Holy Grail of Static Site Generators</title>
            <pubDate>Mon, 16 Dec 2024 00:00:00 +0000</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/zola-the-holy-grail-of-ssg/</link>
            <guid>https://simeon.staneks.de/en/posts/zola-the-holy-grail-of-ssg/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/zola-the-holy-grail-of-ssg/">&lt;h1 id=&quot;genesis&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#genesis&quot; aria-label=&quot;Anchor link for: genesis&quot;&gt;Genesis&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;At our weekly jogging meetups, J. and I talk about God and the world, but 90% of our nerd talks are about hosting, programming and all the tech stuff you can imagine. The talks are probably the first reason for jogging and recently J. came up with the great idea that we should both blog. Let&#x27;s do it! At least one article, once a month. An article about your own blog is a good idea. - Because there are as many ways to blog as there are people.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;zola-a-rusty-path&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#zola-a-rusty-path&quot; aria-label=&quot;Anchor link for: zola-a-rusty-path&quot;&gt;Zola - A rusty path&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;As a bit of a fan of the Rust programming language, I&#x27;m always on the lookout for Rust software. Zola is a static site generator that really packs a punch. Here is the website of the software under development: &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;getzola.org&lt;&#x2F;a&gt;
If you don&#x27;t shy away from CLI tools, then I recommend giving the software a try.
Of course, there are other alternatives, such as &lt;a href=&quot;https:&#x2F;&#x2F;gohugo.io&#x2F;&quot;&gt;HUGO&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;nextjs.org&#x2F;&quot;&gt;Next.js&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;www.gatsbyjs.com&#x2F;&quot;&gt;Gatsby&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;astro.build&#x2F;&quot;&gt;Astro&lt;&#x2F;a&gt;, etc. J. chose Astro in this case, but since I already had good experiences with Zola, I decided to go with it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-does-zola-do&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-does-zola-do&quot; aria-label=&quot;Anchor link for: what-does-zola-do&quot;&gt;What does Zola do?&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Zola creates a so-called static website from static content, from &lt;a href=&quot;https:&#x2F;&#x2F;keats.github.io&#x2F;tera&#x2F;&quot;&gt;Tera templates&lt;&#x2F;a&gt; and Markdown files. Everything is configured in a so-called &lt;code&gt;config.toml&lt;&#x2F;code&gt;, which is located in the root directory of the project or repositories. The generated website can then be found in the &lt;code&gt;public&lt;&#x2F;code&gt; directory and can then be provided by any web server (e.g. &lt;a href=&quot;https:&#x2F;&#x2F;httpd.apache.org&#x2F;&quot;&gt;Apache&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;caddyserver.com&#x2F;&quot;&gt;Caddy&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;www.nginx.com&#x2F;&quot;&gt;nginx&lt;&#x2F;a&gt;, etc.). For my project I use the infrastructure of Github Pages, but more on that later.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;departure-with-zola&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#departure-with-zola&quot; aria-label=&quot;Anchor link for: departure-with-zola&quot;&gt;Departure with Zola&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Zola is easy to install and use, but also to configure. In this article I will go through the individual steps.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;installation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#installation&quot; aria-label=&quot;Anchor link for: installation&quot;&gt;Installation&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;There is a suitable binary file for virtually every operating system. On Gihtub you will find the appropriate &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;releases&quot;&gt;release&lt;&#x2F;a&gt; in most cases, if you can&#x27;t find it, you can also find installation scripts and instructions for compiling Zola on &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;getting-started&#x2F;installation&#x2F;&quot;&gt;getzola.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;initialization&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#initialization&quot; aria-label=&quot;Anchor link for: initialization&quot;&gt;Initialization&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;When Zola is installed, you can create the directory structure of a new project with &lt;code&gt;zola init&lt;&#x2F;code&gt;.
Zola will then ask you:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Welcome&lt;&#x2F;span&gt;&lt;span&gt; to Zola!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Please&lt;&#x2F;span&gt;&lt;span&gt; answer a few questions to get started quickly.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Any&lt;&#x2F;span&gt;&lt;span&gt; choices made can be changed by modifying the `&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;config.toml&lt;&#x2F;span&gt;&lt;span&gt;` file later.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; What &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;is&lt;&#x2F;span&gt;&lt;span&gt; the URL of your site&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span&gt; (https:&#x2F;&#x2F;example.com)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;test.staneks.de
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;you&lt;&#x2F;span&gt;&lt;span&gt; want to enable Sass compilation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;Y&#x2F;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;: n
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;you&lt;&#x2F;span&gt;&lt;span&gt; want to enable syntax highlighting&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;y&#x2F;N&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;: y
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;you&lt;&#x2F;span&gt;&lt;span&gt; want to build a search index of the content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;y&#x2F;N&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;: n
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Done!&lt;&#x2F;span&gt;&lt;span&gt; Your site was created in &#x2F;Users&#x2F;simeon&#x2F;zola&#x2F;testblog.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Get&lt;&#x2F;span&gt;&lt;span&gt; started by moving into the directory and using the built-in server: `&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zola&lt;&#x2F;span&gt;&lt;span&gt; serve`
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Visit&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;www.getzola.org for the full documentation.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;zola-serve&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#zola-serve&quot; aria-label=&quot;Anchor link for: zola-serve&quot;&gt;zola serve&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;With the command &lt;code&gt;zola serve&lt;&#x2F;code&gt; you can now view the website on &lt;code&gt;localhost:1111&lt;&#x2F;code&gt;. The page will then adapt to any changes.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;zola-the-holy-grail-of-ssg&#x2F;images&#x2F;zola00002.png&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;configuration&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#configuration&quot; aria-label=&quot;Anchor link for: configuration&quot;&gt;Configuration&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The configuration file &lt;code&gt;config.toml&lt;&#x2F;code&gt; is located in the root directory of the project. It is the linchpin for the project. All possible configurations can be found in the &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;getting-started&#x2F;configuration&#x2F;&quot;&gt;documentation&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Depending on the situation, Zola recommends that you create an &lt;code&gt;ìndex.html&lt;&#x2F;code&gt; file under &lt;code&gt;templates&lt;&#x2F;code&gt;, or you can directly install a theme that already contains templates and possible static content. More detailed instructions can be found under &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;themes&#x2F;installing-and-using-themes&#x2F;&quot;&gt;Installing &amp;amp; using themes&lt;&#x2F;a&gt;. For my blog, I use the theme &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;themes&#x2F;apollo&#x2F;&quot;&gt;Apollo&lt;&#x2F;a&gt;. This theme already has a dark mode. You can then decide whether to customize the templates in the theme or add more in the &lt;code&gt;&#x2F;templates&lt;&#x2F;code&gt; folder.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;theme&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#theme&quot; aria-label=&quot;Anchor link for: theme&quot;&gt;Theme&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;After the theme has been installed via git, or the data has been extracted from a .zip archive into the &lt;code&gt;&#x2F;themes&lt;&#x2F;code&gt; directory, the &lt;code&gt;config.toml&lt;&#x2F;code&gt; file must be adapted accordingly:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# The URL of the website
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;base_url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;test.staneks.de&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Name of the theme that is located in the `&#x2F;themes&#x2F;apollo` folder
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;theme &lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;apollo&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Title of the website
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;title &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Testing&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Name of the keywords that should be assigned to the articles
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;taxonomies &lt;&#x2F;span&gt;&lt;span&gt;= [{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;tags&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;}]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Generate a CSS file from sass
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;compile_sass &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Create a search index
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;build_search_index &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#Markdown dependent settings
&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;markdown&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Allow syntax highlighting
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;highlight_code &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Theme dependent settings
&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;extra&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Activate the Dark mode
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;theme &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;auto&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Social links
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;socials &lt;&#x2F;span&gt;&lt;span&gt;= [
&lt;&#x2F;span&gt;&lt;span&gt; { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;mastodon&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;indieweb.social&#x2F;@simerl&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;icon &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;mastodon&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt; { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;instagram&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;www.instagram.com&#x2F;simeonstanek&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;icon &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;instagram&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt; { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;github&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;github.com&#x2F;SimeonLukas&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;icon &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;github&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt; { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rss&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;rss.xml&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;icon &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rss&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Navigation bar
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;menu &lt;&#x2F;span&gt;&lt;span&gt;= [
&lt;&#x2F;span&gt;&lt;span&gt; { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;posts&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;posts&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;weight &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt; { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;pages&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;pages&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;weight &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt; { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;about&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;pages&#x2F;about&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;weight &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt; { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;tags&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;tags&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;weight &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Space for variables that are available for the entire website.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The website then looks like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;zola-the-holy-grail-of-ssg&#x2F;images&#x2F;zola00003.png&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Depending on how the developer of the theme created his templates, you can find the different .html files under &lt;code&gt;themes&#x2F;apollo&#x2F;templates&lt;&#x2F;code&gt; that were marked up with the template engine &lt;a href=&quot;https:&#x2F;&#x2F;keats.github.io&#x2F;tera&#x2F;&quot;&gt;Tera&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;These templates can then be gradually adapted to your own needs. The syntax can be quickly understood using the documentation and the templates that have already been created. Here are a few examples:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- If there is a title for a specific page, then use that. --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% if page.title %} {{ page.title }}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- If there is a title for a specific section, use that. --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% elif section.title %} {{ section.title }}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- If there is no title, use the title of the web page. --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; {% else %} {{ config.title }}
&lt;&#x2F;span&gt;&lt;span&gt; {% endif %}
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- templates&#x2F;base.html --&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;en&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;Testing&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;section &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;section&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;container&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; {% block content %} {% endblock %}
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- templates&#x2F;index.html --&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Expand the base template and insert it --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; {% extends &amp;quot;base.html&amp;quot; %}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Contents of the page --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% block content %}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;h1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; This is my blog made with Zola.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- Content of the page that is in Markdown below the configuration --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{{ page.content }}
&lt;&#x2F;span&gt;&lt;span&gt;{% endblock content %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Every .md file that has &lt;code&gt;template = &quot;index.html&quot;&lt;&#x2F;code&gt; set in the configuration is rendered as described above.&lt;&#x2F;p&gt;
&lt;p&gt;Thankfully, the zola compiler indicates when keys are missing in the configuration. This means that simple HTML can be written within these templates and the contents of the pages can be adapted using the engine&#x27;s logic. As with other SSGs, sections are necessary to group individual pages. Section files are located in the source directory of a folder and are marked with an underscore &lt;code&gt;_index.md&lt;&#x2F;code&gt;. These sections then have different values ​​and you can iterate through a section over other pages that are also in the folder.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- templates&#x2F;section.html --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% block post_list %}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;main &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;list&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{%- if paginator %}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- get section --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{%- set show_pages = paginator.pages -%}
&lt;&#x2F;span&gt;&lt;span&gt;{% else %}
&lt;&#x2F;span&gt;&lt;span&gt;{%- set show_pages = section.pages -%}
&lt;&#x2F;span&gt;&lt;span&gt;{% endif -%}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;lt;!-- macros can be stored in another template and loaded by importing, they are then available globally --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{{ post_macros::list_posts(pages=show_pages) }}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% endblock post_list %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;content&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#content&quot; aria-label=&quot;Anchor link for: content&quot;&gt;Content&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The content is simply stored under &lt;code&gt;&#x2F;content&lt;&#x2F;code&gt;. Simple .md files with a toml configuration in the header, which is marked with three plus signs. Zola then renders these files to html and adds them to the sitemap and, if desired, to the RSS feed and the search index.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;md&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-md &quot;&gt;&lt;code class=&quot;language-md&quot; data-lang=&quot;md&quot;&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;span&gt;title = &amp;quot;Zola&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;template = &amp;quot;index.html&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;date = 2025-01-01
&lt;&#x2F;span&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After the page has been created and the content has been inserted, it is a matter of making the website public. I would like to give a rough guide here using Github Pages:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;upload-the-website-to-github-pages&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#upload-the-website-to-github-pages&quot; aria-label=&quot;Anchor link for: upload-the-website-to-github-pages&quot;&gt;Upload the website to Github Pages&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;add-a-domain-to-github&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#add-a-domain-to-github&quot; aria-label=&quot;Anchor link for: add-a-domain-to-github&quot;&gt;Add a domain to Github&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;As a first step, you need to add a domain name in Github Settings. You can see this in the following screenshots:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;zola-the-holy-grail-of-ssg&#x2F;images&#x2F;zola00005.png&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;zola-the-holy-grail-of-ssg&#x2F;images&#x2F;zola00006.png&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gihtub-pages&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#gihtub-pages&quot; aria-label=&quot;Anchor link for: gihtub-pages&quot;&gt;Gihtub Pages&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a public repository on Github&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Create a branch called &lt;code&gt;gh-pages&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Copy the files created by &lt;code&gt;zola build&lt;&#x2F;code&gt; in the &lt;code&gt;public&lt;&#x2F;code&gt; directory to the &lt;code&gt;gh-pages&lt;&#x2F;code&gt; branch or render the page using Github Actions to the &lt;code&gt;gh-pages&lt;&#x2F;code&gt; branch&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Put this file in `.github&#x2F;workflows` and name it `zola.yml` or `main.yml`
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Your repository must be public
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;push
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Build and deploy GH Pages
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;jobs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;build&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;runs-on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;ubuntu-latest
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;github.ref == &amp;#39;refs&#x2F;heads&#x2F;main&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;steps&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;checkout
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;uses&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;actions&#x2F;checkout@v4
&lt;&#x2F;span&gt;&lt;span&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;build_and_deploy
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;uses&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;shalzz&#x2F;zola-deploy-action@v0.19.2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;env&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;TOKEN&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;${{ secrets.GITHUB_TOKEN }}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;
&lt;p&gt;Create a CNAME file in the &lt;code&gt;gh-pages&lt;&#x2F;code&gt; directory with the domain of your website. You can save it directly in the &lt;code&gt;static&lt;&#x2F;code&gt; folder, then it is always in the right place.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Change the A record of your domain to the A record of Github Pages: &lt;code&gt;185.199.108.153&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Adjust your settings on Github as you can see in the following picture:&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;zola-the-holy-grail-of-ssg&#x2F;images&#x2F;zola00004.png&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If everything worked, the website should be visible on your domain.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;Conclusion&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Zola is a convincing lightweight, high-performance static site generator that makes optimal use of the advantages of Rust. The combination of easy configuration, powerful Tera templating and seamless GitHub Pages deployment makes it a great choice for developers who value simplicity and control.
The learning curve is moderate - with basic Markdown and HTML knowledge you can quickly build a functional website. The flexibility in themes and templates allows for customization, while the Rust-based architecture ensures speed and reliability.
For anyone looking for a straightforward, fast and customizable static site generator, Zola is definitely worth a closer look.&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/zola-the-holy-grail-of-ssg/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/zola-the-holy-grail-of-ssg/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> In this article, I will provide you with a detailed introduction to the Static-Site-Generator (SSG) Zola and the use of Github Pages. We will go through the installation, configuration, and usage of Zola step by step and show you how you can easily host your created pages on Github Pages. </info>
        </item>
        <item>
            <title>The ATmega32u4 and Arduino IDE: A Revelation with a Touch of Purgatory</title>
            <pubDate>Sun, 24 Nov 2024 00:00:00 +0000</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/20241124/</link>
            <guid>https://simeon.staneks.de/en/posts/20241124/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/20241124/">&lt;h1 id=&quot;genesis&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#genesis&quot; aria-label=&quot;Anchor link for: genesis&quot;&gt;Genesis&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Back in 2018, I was looking for a way to emulate a keyboard. At the time, I was building a photo booth for my wedding and needed keyboard inputs for a program I had downloaded from GitHub. Today, I find myself facing a similar challenge – this time for a work project. You can find details here: &lt;a href=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241120&#x2F;&quot;&gt;Digital Wheel of Fortune: Fun Gimmick for Tourism Pastoral Events&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241124&#x2F;images&#x2F;foto00001.jpeg&quot; alt=&quot;ATmega32u4: Pro Micro&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;installation-and-setup-the-path-through-purgatory&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#installation-and-setup-the-path-through-purgatory&quot; aria-label=&quot;Anchor link for: installation-and-setup-the-path-through-purgatory&quot;&gt;Installation and Setup - The Path Through Purgatory&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;arduino-ide&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#arduino-ide&quot; aria-label=&quot;Anchor link for: arduino-ide&quot;&gt;Arduino IDE&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The simplest method for programming the chip is the &lt;a href=&quot;https:&#x2F;&#x2F;www.arduino.cc&#x2F;en&#x2F;software&quot;&gt;Arduino IDE&lt;&#x2F;a&gt;. It can be easily downloaded and installed.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;configuring-the-atmega32u4&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#configuring-the-atmega32u4&quot; aria-label=&quot;Anchor link for: configuring-the-atmega32u4&quot;&gt;Configuring the ATmega32u4&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;After installation, navigate to &lt;em&gt;Preferences&lt;&#x2F;em&gt; and add the following link under &lt;em&gt;Additional Board Manager URLs&lt;&#x2F;em&gt;:
&lt;code&gt;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;sparkfun&#x2F;Arduino_Boards&#x2F;main&#x2F;IDE_Board_Manager&#x2F;package_sparkfun_index.json&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241124&#x2F;images&#x2F;foto00002.png&quot; alt=&quot;Board Manager&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Then, select the appropriate board under &lt;em&gt;Tools&lt;&#x2F;em&gt; – in this case, the &lt;em&gt;Sparkfun Pro Micro&lt;&#x2F;em&gt;. It&#x27;s also crucial to select the correct processor based on the operating voltage. The programmer should also match the chip. The board connects via USB (in my case USB-C) and should be recognized immediately.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241124&#x2F;images&#x2F;foto00003.png&quot; alt=&quot;Processor&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;div class=&quot;note-header&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;The True Purgatory: &lt;br&gt;An Important Note!&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;div&gt;
    &lt;div class=&quot;note-content&quot;&gt;
      &lt;p&gt;If you select the wrong processor and upload a file, the chip can become non-functional. In this case, the bootloader must be reflashed:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Select the correct processor&lt;&#x2F;li&gt;
&lt;li&gt;Enter bootloader mode (quickly connect the &lt;code&gt;RST&lt;&#x2F;code&gt; &amp;amp; &lt;code&gt;GND&lt;&#x2F;code&gt; pins twice in succession)&lt;&#x2F;li&gt;
&lt;li&gt;Upload the file within 8 seconds after reset (best to prepare the upload first and then enter bootloader mode)&lt;&#x2F;li&gt;
&lt;li&gt;Repeat if error messages occur&lt;&#x2F;li&gt;
&lt;li&gt;Successful upload is confirmed with the message &lt;code&gt;avrdude done. Thank you.&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;p&gt;After surviving the processor purgatory, the actual programming can begin.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-revelation-programming-the-chip&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-revelation-programming-the-chip&quot; aria-label=&quot;Anchor link for: the-revelation-programming-the-chip&quot;&gt;The Revelation: Programming the Chip&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;For testing, the Blink example under &lt;em&gt;File &amp;gt; Examples &amp;gt; 01.Basics &amp;gt; Blink&lt;&#x2F;em&gt; is ideal. Even though this didn&#x27;t work as expected in my case, the successful upload showed that basic communication with the board was working. For keyboard inputs, you&#x27;ll need the Keyboard library, which can be installed via &lt;em&gt;Sketch &amp;gt; Include Library&lt;&#x2F;em&gt;. You can find a working &lt;a href=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241120&#x2F;#code-example&quot;&gt;code example&lt;&#x2F;a&gt; in the linked article.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;Conclusion&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;The ATmega32u4 proves to be a true revelation in the world of microcontrollers. Once you&#x27;ve passed through the initial purgatory of configuration, it offers both experienced Arduino developers and beginners an excellent path to microcontroller programming, thanks to its compact size and the extensive collection of examples in the IDE.&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/20241124/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/20241124/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> In this article, I will provide you with a detailed introduction to the ATmega32u4 microcontroller and its programming with the Arduino IDE. We will go through the installation, configuration, and usage of the ATmega32u4 step by step and show you how to use this microcontroller for various projects. This guide is aimed at beginners and advanced users looking for an efficient and flexible solution for their microcontroller projects. </info>
        </item>
        <item>
            <title>SummerCart64 N64 Flashcart: A Must-Have for N64 Enthusiasts</title>
            <pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/20241122/</link>
            <guid>https://simeon.staneks.de/en/posts/20241122/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/20241122/">&lt;h1 id=&quot;genesis&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#genesis&quot; aria-label=&quot;Anchor link for: genesis&quot;&gt;Genesis&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;I think it was 10 years. In any case, we spent a long time looking for our old N64 console. Just before I was about to buy one on Kleinanzeigen, we found it in a white bag in my parents&#x27; basement. There was also a PS2 Slim with it. Nostalgia kicked in. I was so happy with the find and looked forward to gaming.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;sc64-n64-flashcart-the-modern-way-to-enjoy-n64-games&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#sc64-n64-flashcart-the-modern-way-to-enjoy-n64-games&quot; aria-label=&quot;Anchor link for: sc64-n64-flashcart-the-modern-way-to-enjoy-n64-games&quot;&gt;SC64 N64 Flashcart: The Modern Way to Enjoy N64 Games&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;As a long-time Nintendo 64 enthusiast, I was always looking for a reliable way to play my favorite games on original hardware. After some research, I discovered the SC64 Flashcart - and I must say, it was one of the best decisions for my retro gaming setup. Additionally, I bought two new controllers from AliExpress, and I was ready for a new adventure with my N64.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241122&#x2F;images&#x2F;n6400001.jpeg&quot; alt=&quot;N64 SC64&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-is-the-sc64-summercart64&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-is-the-sc64-summercart64&quot; aria-label=&quot;Anchor link for: what-is-the-sc64-summercart64&quot;&gt;What is the SC64 - SummerCart64?&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The SC64 is a modern flashcart for the Nintendo 64 that allows you to load ROMs from an SD card. Compared to older solutions like the 64drive or EverDrive-64, it offers several modern conveniences such as a USB-C connection and excellent PC integration. Furthermore, the entire project is open source and can be viewed on GitHub &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polprzewodnikowy&#x2F;N64FlashcartMenu&#x2F;blob&#x2F;main&#x2F;docs&#x2F;00_getting_started_sd.md&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;Polprzewodnikowy&#x2F;SummerCart64&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;installation-and-initial-setup&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#installation-and-initial-setup&quot; aria-label=&quot;Anchor link for: installation-and-initial-setup&quot;&gt;Installation and Initial Setup&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The SC64 works like a classic flashcart:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Format SD card with FAT32 or exFAT&lt;&#x2F;li&gt;
&lt;li&gt;Copy &lt;code&gt;sc64menu.n64&lt;&#x2F;code&gt; to the root directory (The manual mentions creating a &lt;code&gt;menu&lt;&#x2F;code&gt; folder, but please don&#x27;t do that)&lt;&#x2F;li&gt;
&lt;li&gt;Insert SD card into the SC64&lt;&#x2F;li&gt;
&lt;li&gt;Insert SC64 into the Nintendo 64&lt;&#x2F;li&gt;
&lt;li&gt;Power on and wait briefly&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Everything should work then. Now the root directory of the SD card has a &lt;code&gt;menu&lt;&#x2F;code&gt; folder. You can now simply place the ROMs on the SD card (not in &lt;code&gt;menu&lt;&#x2F;code&gt;) and you&#x27;re ready to go. Everything is described and explained on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polprzewodnikowy&#x2F;SummerCart64&#x2F;blob&#x2F;main&#x2F;docs&#x2F;00_quick_startup_guide.md&quot;&gt;website&lt;&#x2F;a&gt;. Additionally, you can use the SC64Deployer program to flash the SC64&#x27;s firmware, format the SD card, and upload ROMs.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241122&#x2F;images&#x2F;n6400002.jpeg&quot; alt=&quot;N64 SC64&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;Conclusion&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;After several days of intensive use, I can unconditionally recommend the SC64. The combination of user-friendly operation makes it a perfect companion for N64 enthusiasts.&lt;&#x2F;p&gt;
&lt;p&gt;Advantages:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Easy installation&lt;&#x2F;li&gt;
&lt;li&gt;Fast ROM loading times&lt;&#x2F;li&gt;
&lt;li&gt;Reliable save state management&lt;&#x2F;li&gt;
&lt;li&gt;Modern USB-C connection&lt;&#x2F;li&gt;
&lt;li&gt;Active firmware development&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Disadvantages:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Price higher than some alternatives&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The SC64 is currently the best N64 flashcart on the market for me. It combines modern technology with nostalgic N64 hardware in a way that will excite both casual gamers and hardware enthusiasts.&lt;&#x2F;p&gt;
&lt;p&gt;For more information and building instructions, visit the official &lt;a href=&quot;https:&#x2F;&#x2F;summercart64.dev&#x2F;&quot;&gt;website&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/20241122/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/20241122/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> In this article, I will provide you with a comprehensive guide and my personal experiences with the SC64 N64 Flashcart. We will go through the installation, configuration, and daily use of the flashcart step by step and show you how to enjoy your favorite games on original hardware. This guide is aimed at retro gaming enthusiasts looking for a reliable and flexible solution for their N64 games. </info>
        </item>
        <item>
            <title>About me</title>
            <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/pages/about/</link>
            <guid>https://simeon.staneks.de/en/pages/about/</guid>
            <description xml:base="https://simeon.staneks.de/en/pages/about/">&lt;h1 id=&quot;simeon-stanek&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#simeon-stanek&quot; aria-label=&quot;Anchor link for: simeon-stanek&quot;&gt;Simeon Stanek&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Driven by a passion for creating unique digital experiences, I&#x27;m a freelance hobbyist specializing in web development, app development, programming, and more. I love taking on custom projects and bringing ideas to life.
My interests include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Web development&lt;&#x2F;li&gt;
&lt;li&gt;App development&lt;&#x2F;li&gt;
&lt;li&gt;Programming&lt;&#x2F;li&gt;
&lt;li&gt;Design&lt;&#x2F;li&gt;
&lt;li&gt;Gaming&lt;&#x2F;li&gt;
&lt;li&gt;Hardware
...and beyond!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;experience&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#experience&quot; aria-label=&quot;Anchor link for: experience&quot;&gt;Experience&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;frontend-programming&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#frontend-programming&quot; aria-label=&quot;Anchor link for: frontend-programming&quot;&gt;Frontend &amp;amp; Programming&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;label for=&quot;file&quot;&gt;HTML&lt;&#x2F;label&gt;
&lt;progress id=&quot;file&quot; value=&quot;85&quot; max=&quot;100&quot;&gt; 85% &lt;&#x2F;progress&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;file&quot;&gt;CSS&lt;&#x2F;label&gt;
&lt;progress id=&quot;file&quot; value=&quot;85&quot; max=&quot;100&quot;&gt; 85% &lt;&#x2F;progress&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;file&quot;&gt;JavaScript&lt;&#x2F;label&gt;
&lt;progress id=&quot;file&quot; value=&quot;75&quot; max=&quot;100&quot;&gt; 75% &lt;&#x2F;progress&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;file&quot;&gt;TypeScript&lt;&#x2F;label&gt;
&lt;progress id=&quot;file&quot; value=&quot;60&quot; max=&quot;100&quot;&gt; 60% &lt;&#x2F;progress&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;file&quot;&gt;PHP&lt;&#x2F;label&gt;
&lt;progress id=&quot;file&quot; value=&quot;60&quot; max=&quot;100&quot;&gt; 60% &lt;&#x2F;progress&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;file&quot;&gt;RUST&lt;&#x2F;label&gt;
&lt;progress id=&quot;file&quot; value=&quot;50&quot; max=&quot;100&quot;&gt; 50% &lt;&#x2F;progress&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;backend-tooling&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#backend-tooling&quot; aria-label=&quot;Anchor link for: backend-tooling&quot;&gt;Backend &amp;amp; Tooling&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;label for=&quot;file&quot;&gt;Docker&lt;&#x2F;label&gt;
&lt;progress id=&quot;file&quot; value=&quot;60&quot; max=&quot;100&quot;&gt; 60% &lt;&#x2F;progress&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;file&quot;&gt;git&lt;&#x2F;label&gt;
&lt;progress id=&quot;file&quot; value=&quot;50&quot; max=&quot;100&quot;&gt; 50% &lt;&#x2F;progress&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;links&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#links&quot; aria-label=&quot;Anchor link for: links&quot;&gt;Links&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;staneks.de&quot;&gt;&lt;strong&gt;Portfolio&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;simeon.staneks.de&quot;&gt;&lt;strong&gt;Blog&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;simeonlukas&quot;&gt;&lt;strong&gt;GitHub&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;en&#x2F;pages&#x2F;impressum&quot;&gt;&lt;strong&gt;Imprint&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;en&#x2F;pages&#x2F;policy&quot;&gt;&lt;strong&gt;Privacy Policy&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;support&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#support&quot; aria-label=&quot;Anchor link for: support&quot;&gt;Support&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.buymeacoffee.com&#x2F;simeonlukas&quot; style=&quot;border-bottom: 0px !important;&quot; target=&quot;_blank&quot; &gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimeonLukas&#x2F;obsidian-kindle-export&#x2F;raw&#x2F;main&#x2F;files&#x2F;coffee.jpg&quot; width=&quot;100%&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/pages/about/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/pages/about/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> freier Hobbyist mit Freude an spannenden und individuellen Projekten in Webentwicklung, Appentwicklung, Programmiering, und mehr. </info>
        </item>
        <item>
            <title>Imprint</title>
            <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/pages/impressum/</link>
            <guid>https://simeon.staneks.de/en/pages/impressum/</guid>
            <description xml:base="https://simeon.staneks.de/en/pages/impressum/">&lt;h2 id=&quot;imprint&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#imprint&quot; aria-label=&quot;Anchor link for: imprint&quot;&gt;Imprint&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;according-to-ss-5-tmg&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#according-to-ss-5-tmg&quot; aria-label=&quot;Anchor link for: according-to-ss-5-tmg&quot;&gt;According to § 5 TMG:&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Simeon Stanek
Schwabengasse 3
82487 Oberammergau&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Contact:&lt;&#x2F;strong&gt;
Telephone: +49 177 4419070
Email: simeon@staneks.de&lt;&#x2F;p&gt;
&lt;h3 id=&quot;disclaimer&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#disclaimer&quot; aria-label=&quot;Anchor link for: disclaimer&quot;&gt;Disclaimer&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;liability-for-content&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#liability-for-content&quot; aria-label=&quot;Anchor link for: liability-for-content&quot;&gt;Liability for Content&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;The content on our website has been created with the greatest care. However, we cannot guarantee the accuracy, completeness, or up-to-dateness of the information provided.&lt;&#x2F;p&gt;
&lt;p&gt;As a service provider, we are responsible for our own content on these pages according to general laws (§ 7 Abs.1 TMG). However, we are not obligated to monitor transmitted or stored third-party information or to investigate circumstances that indicate illegal activity (§§ 8 to 10 TMG). Obligations to remove or block the use of information under general law remain unaffected. A liability in this regard, however, is only possible from the moment of knowledge of a specific infringement. Upon notification of violations, we will remove such content immediately.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;liability-for-links&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#liability-for-links&quot; aria-label=&quot;Anchor link for: liability-for-links&quot;&gt;Liability for Links&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;Our website contains links to external websites of third parties over whose content we have no influence. Therefore, we cannot assume any liability for this foreign content. The respective provider or operator is always responsible for the content of the linked pages. The linked pages were checked for possible legal violations at the time of linking. Illegal content was not recognizable at the time of linking.&lt;&#x2F;p&gt;
&lt;p&gt;A permanent control of the linked pages is unreasonable without concrete evidence of a violation of law. Upon notification of violations, we will remove such links immediately.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;copyright&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#copyright&quot; aria-label=&quot;Anchor link for: copyright&quot;&gt;Copyright&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The content and works created by the site operators on these pages are subject to German copyright law. The reproduction, processing, distribution, and any kind of exploitation outside the limits of copyright require the written consent of the respective author or creator. Downloads and copies of this site are for private, non-commercial use only.&lt;&#x2F;p&gt;
&lt;p&gt;As far as the content on this site was not created by the operator, the copyrights of third parties are respected. In particular, contents of third parties are marked as such. Should you nevertheless become aware of a copyright infringement, please inform us accordingly. Upon notification of violations, we will remove such content immediately.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;additional-information&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#additional-information&quot; aria-label=&quot;Anchor link for: additional-information&quot;&gt;Additional Information&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;According to § 2 Nr. 5 TMG and § 5 TMG:
The website staneks.de was created by Simeon Stanek and does not contain any cookies or forms.&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/pages/impressum/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/pages/impressum/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> The content on our website has been created with the greatest care. However, I cannot guarantee the accuracy, completeness, or up-to-dateness of the information provided. </info>
        </item>
        <item>
            <title>Privacy Policy</title>
            <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/pages/policy/</link>
            <guid>https://simeon.staneks.de/en/pages/policy/</guid>
            <description xml:base="https://simeon.staneks.de/en/pages/policy/">&lt;h2 id=&quot;privacy-policy&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#privacy-policy&quot; aria-label=&quot;Anchor link for: privacy-policy&quot;&gt;Privacy Policy&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-data-controller&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#1-data-controller&quot; aria-label=&quot;Anchor link for: 1-data-controller&quot;&gt;1. Data Controller&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Simeon Stanek
Schwabengasse 3
82487 Oberammergau
Email: simeon@staneks.de&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-basic-information-on-data-processing&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#2-basic-information-on-data-processing&quot; aria-label=&quot;Anchor link for: 2-basic-information-on-data-processing&quot;&gt;2. Basic Information on Data Processing&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;2-1-hosting-on-github-pages&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#2-1-hosting-on-github-pages&quot; aria-label=&quot;Anchor link for: 2-1-hosting-on-github-pages&quot;&gt;2.1 Hosting on GitHub Pages&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;This website is hosted on GitHub Pages. GitHub Inc. (headquartered at 88 Colin P. Kelly Jr. St, San Francisco, CA 94107, USA) may collect technical data such as:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;IP address&lt;&#x2F;li&gt;
&lt;li&gt;Browser information&lt;&#x2F;li&gt;
&lt;li&gt;Access time&lt;&#x2F;li&gt;
&lt;li&gt;Visited pages&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Legal basis: Article 6(1)(f) GDPR. More information can be found in the &lt;a href=&quot;https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;site-policy&#x2F;privacy-policies&#x2F;github-privacy-statement&quot;&gt;GitHub Privacy Statement&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;2-2-data-processing&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#2-2-data-processing&quot; aria-label=&quot;Anchor link for: 2-2-data-processing&quot;&gt;2.2 Data Processing&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;This website is a static page without active tracking mechanisms, cookies, or forms. No additional personal data is collected or processed by the website itself.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-your-rights&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#3-your-rights&quot; aria-label=&quot;Anchor link for: 3-your-rights&quot;&gt;3. Your Rights&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;You have the following rights regarding your data:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Right to information&lt;&#x2F;li&gt;
&lt;li&gt;Right to correction&lt;&#x2F;li&gt;
&lt;li&gt;Right to deletion&lt;&#x2F;li&gt;
&lt;li&gt;Right to restrict processing&lt;&#x2F;li&gt;
&lt;li&gt;Right to object&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;4-contact-for-privacy-questions&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#4-contact-for-privacy-questions&quot; aria-label=&quot;Anchor link for: 4-contact-for-privacy-questions&quot;&gt;4. Contact for Privacy Questions&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;For any privacy-related questions, please contact:
Simeon Stanek
Email: simeon@staneks.de&lt;&#x2F;p&gt;
&lt;h3 id=&quot;5-changes-to-privacy-policy&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#5-changes-to-privacy-policy&quot; aria-label=&quot;Anchor link for: 5-changes-to-privacy-policy&quot;&gt;5. Changes to Privacy Policy&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;We reserve the right to update this privacy policy at any time.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;6-legal-notes&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#6-legal-notes&quot; aria-label=&quot;Anchor link for: 6-legal-notes&quot;&gt;6. Legal Notes&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This privacy policy complies with the requirements of the GDPR and BDSG.&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/pages/policy/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/pages/policy/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> Privacy policy for Simeon Stanek&#x27;s website hosted on GitHub Pages </info>
        </item>
        <item>
            <title>Digital Wheel of Fortune: Fun Gimmick for Tourism Pastoral Events</title>
            <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate>
            <author>Simeon Stanek</author>
            <link>https://simeon.staneks.de/en/posts/20241120/</link>
            <guid>https://simeon.staneks.de/en/posts/20241120/</guid>
            <description xml:base="https://simeon.staneks.de/en/posts/20241120/">&lt;h1 id=&quot;genesis&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#genesis&quot; aria-label=&quot;Anchor link for: genesis&quot;&gt;Genesis&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;My colleague F. and I came up with something special for the decanal merger of the Werdenfels and Rottenbuch deaneries. It was important to us that the project would make a strong impression. I came up with the idea of a digital wheel of fortune – or fate wheel, as you might call it. It was to be controlled with a foot switch. Depending on the number, participants would receive a postcard personally designed by F. As a highlight, a photo would be taken for selected numbers. A photo booth and a wheel of fortune in one – how hard could it be? 😃&lt;&#x2F;p&gt;
&lt;h1 id=&quot;concept&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#concept&quot; aria-label=&quot;Anchor link for: concept&quot;&gt;Concept&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;software&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#software&quot; aria-label=&quot;Anchor link for: software&quot;&gt;Software&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;frontend&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#frontend&quot; aria-label=&quot;Anchor link for: frontend&quot;&gt;Frontend&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;I thought it should be simple to create a wheel of fortune using vanilla web technology. Said and done – within an hour, the principle was established, and the wheel would spin when pressing the 1 key on the keyboard. The design was initially rather makeshift. But F., a passionate layout artist, graphic designer, illustrator, and designer, immediately drew a matching frame for the wheel of fortune and the drawn number.&lt;&#x2F;p&gt;
&lt;p&gt;A test run is possible at &lt;a href=&quot;https:&#x2F;&#x2F;tourismuspastoral.de&#x2F;yourturn&#x2F;&quot;&gt;https:&#x2F;&#x2F;tourismuspastoral.de&#x2F;yourturn&#x2F;&lt;&#x2F;a&gt;. Depending on the screen resolution, the frame doesn&#x27;t fit optimally. Due to time and simplicity constraints, the web app is only optimized for 720p screens – that&#x27;s completely sufficient.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241120&#x2F;images&#x2F;screenshot.jpeg&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;For numbers 1 and 25, the camera opens and takes a photo after 5 seconds. This function is also triggered when pressing key 2, as we wanted to make the photo available to those photographed. The photo is sent to my server and a QR code is generated to retrieve the photo.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241120&#x2F;images&#x2F;screenshot1.jpeg&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;backend&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#backend&quot; aria-label=&quot;Anchor link for: backend&quot;&gt;Backend&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Of course, it took some effort to make everything work. The photo is received via an n8n webhook and stored in two locations on my server. Once this process is complete, a confirmation is sent and the corresponding QR code is displayed. Additionally, there is a second webhook.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241120&#x2F;images&#x2F;screenshot2.png&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The QR code leads to a PHP script that allows deleting the photo. The photo can then be removed from both storage locations by the second webhook, if desired.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241120&#x2F;images&#x2F;screenshot3.jpg&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hardware&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#hardware&quot; aria-label=&quot;Anchor link for: hardware&quot;&gt;Hardware&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;A laptop would have sufficed for the simple setup, but we wanted to go big: 50-inch screen, foot switch, webcam, and laptop were necessary. The participants visibly had fun.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;further-development&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#further-development&quot; aria-label=&quot;Anchor link for: further-development&quot;&gt;Further Development&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Our boss was so excited about the action that he wants to set up the wheel of fortune at the leisure fair in Munich. He wishes for a hand switch, and in the course of this, we&#x27;re also acquiring a Raspberry Pi 5 so that no one has to leave their laptop at the F.re.e for a week.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241120&#x2F;images&#x2F;hardware.jpeg&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I bought the switch on AliExpress, along with an Atmega32u4. The chip can act like a keyboard and sends the &quot;1&quot; to the web app when a key is pressed. It can be programmed very easily with the Arduino IDE and can be directly connected to the Raspberry via USB.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;simeon.staneks.de&#x2F;en&#x2F;posts&#x2F;20241120&#x2F;images&#x2F;hardware1.jpeg&quot; alt=&quot;Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;code-example&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#code-example&quot; aria-label=&quot;Anchor link for: code-example&quot;&gt;Code Example&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Here&#x27;s the simple code that was uploaded to the Atmega32u4 using the Arduino IDE.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cpp&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-cpp &quot;&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Keyboard.h&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Declaration of pins: 4 for the button and 3 for the LED - both pins must of course be connected to ground
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; buttonPin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const int&lt;&#x2F;span&gt;&lt;span&gt; ledPin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; previousButtonState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; HIGH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setup&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Definition of pins
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;pinMode&lt;&#x2F;span&gt;&lt;span&gt;(buttonPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; INPUT_PULLUP)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;pinMode&lt;&#x2F;span&gt;&lt;span&gt;(ledPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; OUTPUT)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  Keyboard&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;begin&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loop&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Reads the button state
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; buttonState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalRead&lt;&#x2F;span&gt;&lt;span&gt;(buttonPin)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalWrite&lt;&#x2F;span&gt;&lt;span&gt;(ledPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; HIGH)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; When the button is pressed:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(buttonState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; LOW &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt; previousButtonState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; HIGH) {
&lt;&#x2F;span&gt;&lt;span&gt;    Keyboard&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Makes the LED blink 😃
&lt;&#x2F;span&gt;&lt;span&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalWrite&lt;&#x2F;span&gt;&lt;span&gt;(ledPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; LOW)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalWrite&lt;&#x2F;span&gt;&lt;span&gt;(ledPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; HIGH)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalWrite&lt;&#x2F;span&gt;&lt;span&gt;(ledPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; LOW)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalWrite&lt;&#x2F;span&gt;&lt;span&gt;(ledPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; HIGH)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalWrite&lt;&#x2F;span&gt;&lt;span&gt;(ledPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; LOW)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;digitalWrite&lt;&#x2F;span&gt;&lt;span&gt;(ledPin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; HIGH)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(buttonState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; HIGH &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt; previousButtonState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; LOW) {
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Nothing happens here
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Stores the current button state
&lt;&#x2F;span&gt;&lt;span&gt;  previousButtonState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; buttonState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;s&gt;How the final result will ultimately look will become clear in the coming weeks.&lt;&#x2F;s&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-result&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-result&quot; aria-label=&quot;Anchor link for: the-result&quot;&gt;The Result&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;video loop controls width=&quot;50%&quot; style=&quot;margin-left: 25%;&quot;&gt;&lt;source src=&quot;images&#x2F;video.mp4&quot; type=&quot;video&#x2F;mp4&quot;&gt;&lt;&#x2F;video&gt;&lt;&#x2F;p&gt;
</description>
            <enclosure url="https://simeon.staneks.de/en/posts/20241120/images/en/feed.jpg" length="1967" type="image/jpeg"/>
            <media:thumbnail url="https://simeon.staneks.de/en/posts/20241120/images/en/feed.jpg" width="500" height="500" time="0"/>
            <info> In this article, I will introduce you to a digital wheel of fortune developed for the events of the Tourism Pastoral in the Werdenfelser Land and the Tourism Pastoral of the Archdiocese of Munich and Freising. We will go through the idea, technical implementation, and usage of the wheel of fortune step by step and show how it can be used at various events. This guide is aimed at anyone looking for creative and interactive solutions for their events. </info>
        </item>
    </channel>
</rss>