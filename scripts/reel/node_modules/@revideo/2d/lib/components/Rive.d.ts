import type { SignalValue, SimpleSignal } from '@revideo/core';
import type { RectProps } from './Rect';
import { Rect } from './Rect';
export interface RiveProps extends RectProps {
    src?: SignalValue<string>;
    artboardId?: SignalValue<string | number>;
    animationId?: SignalValue<string | number>;
}
export declare class Rive extends Rect {
    readonly src: SimpleSignal<string, this>;
    readonly artboardId: SimpleSignal<number | string, this>;
    readonly animationId: SimpleSignal<number | string, this>;
    protected readonly time: SimpleSignal<number, this>;
    protected currentTime: number;
    protected lastTime: number;
    constructor(props: RiveProps);
    private rive;
    protected draw(context: CanvasRenderingContext2D): Promise<void>;
    private getArtboard;
    private getAnimation;
}
//# sourceMappingURL=Rive.d.ts.map