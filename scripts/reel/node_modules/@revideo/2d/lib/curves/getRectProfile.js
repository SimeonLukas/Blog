import { Vector2 } from '@revideo/core';
import { adjustRectRadius } from '../utils';
import { CircleSegment } from './CircleSegment';
import { CubicBezierSegment } from './CubicBezierSegment';
import { LineSegment } from './LineSegment';
export function getRectProfile(rect, radius, smoothCorners, cornerSharpness) {
    const profile = {
        arcLength: 0,
        segments: [],
        minSin: 1,
    };
    const topLeft = adjustRectRadius(radius.top, radius.right, radius.left, rect);
    const topRight = adjustRectRadius(radius.right, radius.top, radius.bottom, rect);
    const bottomRight = adjustRectRadius(radius.bottom, radius.left, radius.right, rect);
    const bottomLeft = adjustRectRadius(radius.left, radius.bottom, radius.top, rect);
    let from = new Vector2(rect.left + topLeft, rect.top);
    let to = new Vector2(rect.right - topRight, rect.top);
    addSegment(profile, new LineSegment(from, to));
    from = new Vector2(rect.right, rect.top + topRight);
    to = new Vector2(rect.right, rect.bottom - bottomRight);
    if (topRight > 0) {
        addCornerSegment(profile, from.addX(-topRight), topRight, Vector2.down, Vector2.right, smoothCorners, cornerSharpness);
    }
    addSegment(profile, new LineSegment(from, to));
    from = new Vector2(rect.right - bottomRight, rect.bottom);
    to = new Vector2(rect.left + bottomLeft, rect.bottom);
    if (bottomRight > 0) {
        addCornerSegment(profile, from.addY(-bottomRight), bottomRight, Vector2.right, Vector2.up, smoothCorners, cornerSharpness);
    }
    addSegment(profile, new LineSegment(from, to));
    from = new Vector2(rect.left, rect.bottom - bottomLeft);
    to = new Vector2(rect.left, rect.top + topLeft);
    if (bottomLeft > 0) {
        addCornerSegment(profile, from.addX(bottomLeft), bottomLeft, Vector2.up, Vector2.left, smoothCorners, cornerSharpness);
    }
    addSegment(profile, new LineSegment(from, to));
    from = new Vector2(rect.left + topLeft, rect.top);
    if (topLeft > 0) {
        addCornerSegment(profile, from.addY(topLeft), topLeft, Vector2.left, Vector2.down, smoothCorners, cornerSharpness);
    }
    return profile;
}
function addSegment(profile, segment) {
    profile.segments.push(segment);
    profile.arcLength += segment.arcLength;
}
function addCornerSegment(profile, center, radius, fromNormal, toNormal, smooth, sharpness) {
    const from = center.add(fromNormal.scale(radius));
    const to = center.add(toNormal.scale(radius));
    if (smooth) {
        addSegment(profile, new CubicBezierSegment(from, from.add(toNormal.scale(sharpness * radius)), to.add(fromNormal.scale(sharpness * radius)), to));
    }
    else {
        addSegment(profile, new CircleSegment(center, radius, fromNormal, toNormal, false));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UmVjdFByb2ZpbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbGliL2N1cnZlcy9nZXRSZWN0UHJvZmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3RDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQUMxQyxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDOUMsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFFeEQsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUcxQyxNQUFNLFVBQVUsY0FBYyxDQUM1QixJQUFVLEVBQ1YsTUFBZSxFQUNmLGFBQXNCLEVBQ3RCLGVBQXVCO0lBRXZCLE1BQU0sT0FBTyxHQUFpQjtRQUM1QixTQUFTLEVBQUUsQ0FBQztRQUNaLFFBQVEsRUFBRSxFQUFFO1FBQ1osTUFBTSxFQUFFLENBQUM7S0FDVixDQUFDO0lBRUYsTUFBTSxPQUFPLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDOUUsTUFBTSxRQUFRLEdBQUcsZ0JBQWdCLENBQy9CLE1BQU0sQ0FBQyxLQUFLLEVBQ1osTUFBTSxDQUFDLEdBQUcsRUFDVixNQUFNLENBQUMsTUFBTSxFQUNiLElBQUksQ0FDTCxDQUFDO0lBQ0YsTUFBTSxXQUFXLEdBQUcsZ0JBQWdCLENBQ2xDLE1BQU0sQ0FBQyxNQUFNLEVBQ2IsTUFBTSxDQUFDLElBQUksRUFDWCxNQUFNLENBQUMsS0FBSyxFQUNaLElBQUksQ0FDTCxDQUFDO0lBQ0YsTUFBTSxVQUFVLEdBQUcsZ0JBQWdCLENBQ2pDLE1BQU0sQ0FBQyxJQUFJLEVBQ1gsTUFBTSxDQUFDLE1BQU0sRUFDYixNQUFNLENBQUMsR0FBRyxFQUNWLElBQUksQ0FDTCxDQUFDO0lBRUYsSUFBSSxJQUFJLEdBQUcsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RELElBQUksRUFBRSxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsUUFBUSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN0RCxVQUFVLENBQUMsT0FBTyxFQUFFLElBQUksV0FBVyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRS9DLElBQUksR0FBRyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxHQUFHLEdBQUcsUUFBUSxDQUFDLENBQUM7SUFDcEQsRUFBRSxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sR0FBRyxXQUFXLENBQUMsQ0FBQztJQUN4RCxJQUFJLFFBQVEsR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUNqQixnQkFBZ0IsQ0FDZCxPQUFPLEVBQ1AsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUNwQixRQUFRLEVBQ1IsT0FBTyxDQUFDLElBQUksRUFDWixPQUFPLENBQUMsS0FBSyxFQUNiLGFBQWEsRUFDYixlQUFlLENBQ2hCLENBQUM7SUFDSixDQUFDO0lBQ0QsVUFBVSxDQUFDLE9BQU8sRUFBRSxJQUFJLFdBQVcsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUUvQyxJQUFJLEdBQUcsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxXQUFXLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzFELEVBQUUsR0FBRyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLFVBQVUsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdEQsSUFBSSxXQUFXLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDcEIsZ0JBQWdCLENBQ2QsT0FBTyxFQUNQLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxXQUFXLENBQUMsRUFDdkIsV0FBVyxFQUNYLE9BQU8sQ0FBQyxLQUFLLEVBQ2IsT0FBTyxDQUFDLEVBQUUsRUFDVixhQUFhLEVBQ2IsZUFBZSxDQUNoQixDQUFDO0lBQ0osQ0FBQztJQUNELFVBQVUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxXQUFXLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFL0MsSUFBSSxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE1BQU0sR0FBRyxVQUFVLENBQUMsQ0FBQztJQUN4RCxFQUFFLEdBQUcsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxDQUFDO0lBQ2hELElBQUksVUFBVSxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQ25CLGdCQUFnQixDQUNkLE9BQU8sRUFDUCxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUNyQixVQUFVLEVBQ1YsT0FBTyxDQUFDLEVBQUUsRUFDVixPQUFPLENBQUMsSUFBSSxFQUNaLGFBQWEsRUFDYixlQUFlLENBQ2hCLENBQUM7SUFDSixDQUFDO0lBQ0QsVUFBVSxDQUFDLE9BQU8sRUFBRSxJQUFJLFdBQVcsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUUvQyxJQUFJLEdBQUcsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2xELElBQUksT0FBTyxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQ2hCLGdCQUFnQixDQUNkLE9BQU8sRUFDUCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUNsQixPQUFPLEVBQ1AsT0FBTyxDQUFDLElBQUksRUFDWixPQUFPLENBQUMsSUFBSSxFQUNaLGFBQWEsRUFDYixlQUFlLENBQ2hCLENBQUM7SUFDSixDQUFDO0lBRUQsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQztBQUVELFNBQVMsVUFBVSxDQUFDLE9BQXFCLEVBQUUsT0FBZ0I7SUFDekQsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsT0FBTyxDQUFDLFNBQVMsSUFBSSxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ3pDLENBQUM7QUFFRCxTQUFTLGdCQUFnQixDQUN2QixPQUFxQixFQUNyQixNQUFlLEVBQ2YsTUFBYyxFQUNkLFVBQW1CLEVBQ25CLFFBQWlCLEVBQ2pCLE1BQWUsRUFDZixTQUFpQjtJQUVqQixNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNsRCxNQUFNLEVBQUUsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ1gsVUFBVSxDQUNSLE9BQU8sRUFDUCxJQUFJLGtCQUFrQixDQUNwQixJQUFJLEVBQ0osSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsQ0FBQyxFQUM1QyxFQUFFLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxDQUFDLEVBQzVDLEVBQUUsQ0FDSCxDQUNGLENBQUM7SUFDSixDQUFDO1NBQU0sQ0FBQztRQUNOLFVBQVUsQ0FDUixPQUFPLEVBQ1AsSUFBSSxhQUFhLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxDQUMvRCxDQUFDO0lBQ0osQ0FBQztBQUNILENBQUMifQ==