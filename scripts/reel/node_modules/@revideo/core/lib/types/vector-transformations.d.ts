/**
 * These are the functions that can be used to apply transformations to a vector.
 *
 * These can't be methods of the vector class because they depend on Matrix2D which
 * would create a circular dependency.
 */
import type { PossibleMatrix2D } from './Matrix2D';
import type { PossibleVector2 } from './Vector';
import { Vector2 } from './Vector';
export declare function transformVectorAsPoint(vector: Vector2, matrix: PossibleMatrix2D): Vector2;
export declare function transformVector(vector: Vector2, matrix: PossibleMatrix2D): Vector2;
/**
 * Rotates the vector around a point by the provided angle.
 *
 * @param vector - The vector to rotate.
 * @param angle - The angle by which to rotate in degrees.
 * @param center - The center of rotation. Defaults to the origin.
 */
export declare function rotateVector(vector: Vector2, angle: number, center?: PossibleVector2): Vector2;
//# sourceMappingURL=vector-transformations.d.ts.map