"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getParamDefaultsAndCheckValidity = getParamDefaultsAndCheckValidity;
const uuid_1 = require("uuid");
function getParamDefaultsAndCheckValidity(settings) {
    const defaultReturn = {
        outputFileName: 'video',
        outputFolderName: settings.outDir ?? './output',
        numOfWorkers: settings.workers ?? 1,
        hiddenFolderId: (0, uuid_1.v4)(),
    };
    // Image sequence exporter is not supported in renderVideo or renderPartialVideo
    if (settings.projectSettings?.exporter?.name === '@revideo/core/image-sequence') {
        throw Error('You cannot use the image sequence exporter with renderVideo or renderPartialVideo. Please use the editor to export images');
    }
    const extension = settings.outFile?.split('.').pop();
    const outFileWithoutExtension = settings.outFile
        ?.split('.')
        .slice(0, -1)
        .join('.');
    // If the output file name is not provided, we don't need to validate further
    if (!outFileWithoutExtension) {
        return {
            ...defaultReturn,
            outputFileName: 'video',
            format: 'mp4',
        };
    }
    // Wasm exporter only supports exporting to mp4
    if (settings.projectSettings?.exporter?.name === '@revideo/core/wasm' &&
        extension !== 'mp4') {
        throw Error('The Wasm Exporter only supports exporting to mp4. Please adjust the extension of your output file name');
    }
    // If we are using the wasm exporter, we don't need to validate further
    if (settings.projectSettings?.exporter?.name === '@revideo/core/wasm') {
        return {
            ...defaultReturn,
            outputFileName: outFileWithoutExtension,
            format: 'mp4',
        };
    }
    // If we are using the ffmpeg exporter, we need to check the extension matches the format
    if (settings.projectSettings?.exporter?.options.format === 'mp4' &&
        extension !== 'mp4') {
        throw Error("You've chosen mp4 as your file format in the exporter options, but your outFile does not have a mp4 extension. Please use an mp4 extension");
    }
    if (settings.projectSettings?.exporter?.options.format === 'webm' &&
        extension !== 'webm') {
        throw Error("You've chosen webm as your file format in the exporter options, but your outFile does not have a webm extension. Please use a webm extension");
    }
    if (settings.projectSettings?.exporter?.options.format === 'proRes' &&
        extension !== 'mov') {
        throw Error("You've chosen proRes as your file format in the exporter options, but your outFile does not have a mov extension. Please use a mov extension");
    }
    return {
        ...defaultReturn,
        outputFileName: outFileWithoutExtension,
        format: settings.projectSettings?.exporter?.options.format ?? 'mp4',
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGUtc2V0dGluZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zZXJ2ZXIvdmFsaWRhdGUtc2V0dGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFJQSw0RUErRkM7QUFqR0QsK0JBQWtDO0FBRWxDLFNBQWdCLGdDQUFnQyxDQUFDLFFBQXdCO0lBT3ZFLE1BQU0sYUFBYSxHQUFHO1FBQ3BCLGNBQWMsRUFBRSxPQUFPO1FBQ3ZCLGdCQUFnQixFQUFFLFFBQVEsQ0FBQyxNQUFNLElBQUksVUFBVTtRQUMvQyxZQUFZLEVBQUUsUUFBUSxDQUFDLE9BQU8sSUFBSSxDQUFDO1FBQ25DLGNBQWMsRUFBRSxJQUFBLFNBQU0sR0FBRTtLQU16QixDQUFDO0lBRUYsZ0ZBQWdGO0lBQ2hGLElBQ0UsUUFBUSxDQUFDLGVBQWUsRUFBRSxRQUFRLEVBQUUsSUFBSSxLQUFLLDhCQUE4QixFQUMzRSxDQUFDO1FBQ0QsTUFBTSxLQUFLLENBQ1QsMkhBQTJILENBQzVILENBQUM7SUFDSixDQUFDO0lBRUQsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDckQsTUFBTSx1QkFBdUIsR0FBRyxRQUFRLENBQUMsT0FBTztRQUM5QyxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUM7U0FDWCxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ1osSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRWIsNkVBQTZFO0lBQzdFLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxDQUFDO1FBQzdCLE9BQU87WUFDTCxHQUFHLGFBQWE7WUFDaEIsY0FBYyxFQUFFLE9BQU87WUFDdkIsTUFBTSxFQUFFLEtBQUs7U0FDZCxDQUFDO0lBQ0osQ0FBQztJQUVELCtDQUErQztJQUMvQyxJQUNFLFFBQVEsQ0FBQyxlQUFlLEVBQUUsUUFBUSxFQUFFLElBQUksS0FBSyxvQkFBb0I7UUFDakUsU0FBUyxLQUFLLEtBQUssRUFDbkIsQ0FBQztRQUNELE1BQU0sS0FBSyxDQUNULHdHQUF3RyxDQUN6RyxDQUFDO0lBQ0osQ0FBQztJQUVELHVFQUF1RTtJQUN2RSxJQUFJLFFBQVEsQ0FBQyxlQUFlLEVBQUUsUUFBUSxFQUFFLElBQUksS0FBSyxvQkFBb0IsRUFBRSxDQUFDO1FBQ3RFLE9BQU87WUFDTCxHQUFHLGFBQWE7WUFDaEIsY0FBYyxFQUFFLHVCQUF1QjtZQUN2QyxNQUFNLEVBQUUsS0FBSztTQUNkLENBQUM7SUFDSixDQUFDO0lBRUQseUZBQXlGO0lBQ3pGLElBQ0UsUUFBUSxDQUFDLGVBQWUsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLE1BQU0sS0FBSyxLQUFLO1FBQzVELFNBQVMsS0FBSyxLQUFLLEVBQ25CLENBQUM7UUFDRCxNQUFNLEtBQUssQ0FDVCw0SUFBNEksQ0FDN0ksQ0FBQztJQUNKLENBQUM7SUFFRCxJQUNFLFFBQVEsQ0FBQyxlQUFlLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxNQUFNLEtBQUssTUFBTTtRQUM3RCxTQUFTLEtBQUssTUFBTSxFQUNwQixDQUFDO1FBQ0QsTUFBTSxLQUFLLENBQ1QsOElBQThJLENBQy9JLENBQUM7SUFDSixDQUFDO0lBRUQsSUFDRSxRQUFRLENBQUMsZUFBZSxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsTUFBTSxLQUFLLFFBQVE7UUFDL0QsU0FBUyxLQUFLLEtBQUssRUFDbkIsQ0FBQztRQUNELE1BQU0sS0FBSyxDQUNULDhJQUE4SSxDQUMvSSxDQUFDO0lBQ0osQ0FBQztJQUVELE9BQU87UUFDTCxHQUFHLGFBQWE7UUFDaEIsY0FBYyxFQUFFLHVCQUF1QjtRQUN2QyxNQUFNLEVBQUUsUUFBUSxDQUFDLGVBQWUsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLE1BQU0sSUFBSSxLQUFLO0tBQ3BFLENBQUM7QUFDSixDQUFDIn0=